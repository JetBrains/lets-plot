buildscript {
    dependencies {
        classpath "org.yaml:snakeyaml:1.25"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0"
    }
}

plugins {
    id "org.jetbrains.kotlin.multiplatform" apply false
    id "org.jetbrains.kotlin.js" apply false
    id "org.jetbrains.gradle.plugin.idea-ext" apply false
    id "com.jfrog.bintray" apply false
    id "com.github.johnrengelman.shadow" apply false
    id "io.codearte.nexus-staging"
}

def include_sources_letsPlotJvmCommon = [
        'base-portable',
        'base',
        'mapper-core',
        'vis-canvas',
        'vis-svg-mapper',
        'vis-svg-portable',
        'plot-base-portable',
        'plot-base',
        'plot-common-portable',
        'plot-common',
        'plot-builder-portable',
        'plot-builder',
        'plot-config-portable',
        'plot-config',
]

def include_sources_letsPlotJvmJfx = [
        'vis-svg-mapper-jfx',
        'vis-swing-common',
        'vis-swing-jfx',
        'vis-demo-common',
        'vis-demo-common-jfx',
]

def include_sources_letsPlotJvmBatik = [
        'vis-svg-mapper-batik',
        'vis-swing-common',
        'vis-swing-batik',
        'vis-demo-common',
        'vis-demo-common-batik',
]

configurations {
    letsPlotJvmCommonSources
    letsPlotJvmJfxSources
    letsPlotJvmBatikSources
}

allprojects {
    group = 'org.jetbrains.lets-plot'
    version = "2.0.2-alpha1"
    project.ext.js_artifact_version = "2.0.2.dev1"
    // see also: python-package/lets_plot/_version.py

    repositories {
//        maven {
//            url = uri("$rootDir/.maven-publish-dev-repo")
//        }

        mavenCentral()
        jcenter()
    }

    // jar jvm sources of this project
    if (name in include_sources_letsPlotJvmCommon || name in include_sources_letsPlotJvmJfx || name in include_sources_letsPlotJvmBatik) {
        apply plugin: "org.jetbrains.kotlin.multiplatform"
        kotlin.jvm {}   // for `jvmSourcesJar` task
        build.dependsOn += jvmSourcesJar
    }

    // make build configuration depend on sources jars
    def sources_jar_path = "${buildDir}/libs/${name}-jvm-${version}-sources.jar"
    if (name in include_sources_letsPlotJvmCommon) {
        rootProject.dependencies {
            letsPlotJvmCommonSources files(sources_jar_path)
        }
    }
    if (name in include_sources_letsPlotJvmJfx) {
        rootProject.dependencies {
            letsPlotJvmJfxSources files(sources_jar_path)
        }
    }
    if (name in include_sources_letsPlotJvmBatik) {
        rootProject.dependencies {
            letsPlotJvmBatikSources files(sources_jar_path)
        }
    }
}

import org.yaml.snakeyaml.Yaml

def build_settings_file = new File(rootDir, "build_settings.yml")
if (!build_settings_file.canRead()) {
    throw new GradleException("Couldn't read build_settings.yml")
}
def settings = new Yaml().load(build_settings_file.newInputStream())
if (settings.build_python_extension) {
    assert settings.python.include_path != null
}
if (settings.enable_python_package) {
    assert settings.build_python_extension
    assert settings.python.bin_path != null
}

project.ext.buildSettings = settings

// Bintray settings

project.ext["bintraySettings"] = [
        userOrg            : 'jetbrains',
        licenses           : ['MIT'],
        vcsUrl             : 'https://github.com/JetBrains/lets-plot',
        publish            : true,

        js_repo            : "lets-plot",
        js_pkg_name        : 'lets-plot-js',
        js_artifact_version: js_artifact_version,
]

// Maven publication settings
// define local Maven Repository path:
project.ext.localMavenRepository = "$rootDir/.maven-publish-dev-repo"

// define Sonatype nexus repository manager settings:
def sonatypeSnapshotUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
def sonatypeReleaseUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
project.ext.sonatypeUrl = version.contains('SNAPSHOT') ? sonatypeSnapshotUrl : sonatypeReleaseUrl

// nexus-staging plugin settings:
nexusStaging {
    packageGroup = 'org.jetbrains'
    username = project.buildSettings.sonatype.username
    password = project.buildSettings.sonatype.password
}
