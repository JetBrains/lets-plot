buildscript {
    dependencies {
        classpath "org.yaml:snakeyaml:1.25"
    }
}

plugins {
    id "org.jetbrains.kotlin.multiplatform" apply false
    id "org.jetbrains.kotlin.js" apply false
    id "org.jetbrains.gradle.plugin.idea-ext" apply false
    id "com.jfrog.bintray" apply false
    id "com.github.johnrengelman.shadow" apply false
}

def include_sources_letsPlotJvmCommon = [
        'base-portable',
        'base',
        'vis-canvas',
        'vis-svg-portable',
        'plot-base-portable',
        'plot-base',
        'plot-common-portable',
        'plot-common',
        'plot-builder-portable',
        'plot-builder',
        'plot-config-portable',
        'plot-config',
]

def include_sources_letsPlotJvmJfx = [
        'mapper-core',
        'vis-svg-mapper',
        'vis-svg-mapper-jfx',
        'vis-demo-common',
        'vis-demo-common-jfx',
]

def include_sources_letsPlotJvmBatik = [
        'mapper-core',
        'vis-svg-mapper',
        'vis-svg-mapper-batik',
        'vis-demo-common',
        'vis-demo-common-batik',
]

configurations {
    letsPlotJvmCommonSources
    letsPlotJvmJfxSources
    letsPlotJvmBatikSources
}

allprojects {
    group = 'org.jetbrains.lets-plot'
    version = "1.5.1"
    project.ext.js_artifact_version = "1.5.1"
    // see also: python-package/lets_plot/_version.py

    repositories {
        mavenCentral()
        jcenter()
    }

    // jar jvm sources of this project
    if (name in include_sources_letsPlotJvmCommon || name in include_sources_letsPlotJvmJfx || name in include_sources_letsPlotJvmBatik) {
        apply plugin: "org.jetbrains.kotlin.multiplatform"
        kotlin.jvm {}   // for `jvmSourcesJar` task
        build.dependsOn += jvmSourcesJar
    }

    // make build configuration depend on sources jars
    def sources_jar_path = "${buildDir}/libs/${name}-jvm-${version}-sources.jar"
    if (name in include_sources_letsPlotJvmCommon) {
        rootProject.dependencies {
            letsPlotJvmCommonSources files(sources_jar_path)
        }
    }
    if (name in include_sources_letsPlotJvmJfx) {
        rootProject.dependencies {
            letsPlotJvmJfxSources files(sources_jar_path)
        }
    }
    if (name in include_sources_letsPlotJvmBatik) {
        rootProject.dependencies {
            letsPlotJvmBatikSources files(sources_jar_path)
        }
    }
}

import org.yaml.snakeyaml.Yaml

def build_settings_file = new File(rootDir, "build_settings.yml")
if (!build_settings_file.canRead()) {
    throw new GradleException("Couldn't read build_settings.yml")
}
def settings = new Yaml().load(build_settings_file.newInputStream())
if (settings.build_python_extension) {
    assert settings.python.include_path != null
}
if (settings.enable_python_package) {
    assert settings.build_python_extension
    assert settings.python.bin_path != null
}

project.ext.buildSettings = settings

// Bintray settings

// define the package name in the Bintray Maven repository depending on the version name
def bintray_mvn_pkg_name = 'lets-plot-jars'
if (version.contains('SNAPSHOT') || version.contains('rc')) {
    bintray_mvn_pkg_name = 'lets-plot-jars-dev'
}

project.ext["bintraySettings"] = [
        userOrg            : 'jetbrains',
        licenses           : ['MIT'],
        vcsUrl             : 'https://github.com/JetBrains/lets-plot',
        publish            : true,

        js_repo            : "lets-plot",
        js_pkg_name        : 'lets-plot-js',
        js_artifact_version: js_artifact_version,

        mvn_repo           : 'lets-plot-maven',
        mvn_pkg_name       : bintray_mvn_pkg_name,
]

