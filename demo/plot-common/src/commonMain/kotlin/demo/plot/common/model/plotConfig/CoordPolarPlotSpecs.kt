/*
 * Copyright (c) 2023. JetBrains s.r.o.
 * Use of this source code is governed by the MIT license that can be found in the LICENSE file.
 */

package demo.plot.common.model.plotConfig

import demoAndTestShared.parsePlotSpec

class CoordPolarPlotSpecs {
    fun plotSpecList(): List<MutableMap<String, Any>> {
        return listOf(
            geomBarStack(),
            geomBarDodge(),
            path(),
            textSpiral(zeroExtend = true),
            geomTile(),
            geomSegment(),
            windRose(),
            pointTooltip(),
        )
    }

    private fun pointTooltip(): MutableMap<String, Any> {
        val spec = """
            |{
            |  "kind": "subplots",
            |  "layout": { "ncol": 2.0, "nrow": 1.0, "name": "grid" },
            |  "figures": [
            |    {
            |      "data": {
            |        "x": [ 1.0, 2.0, 3.0, 4.0, 5.0 ],
            |        "y": [ 1.0, 2.0, 3.0, 4.0, 5.0 ],
            |        "s": [ 5.0, 4.0, 3.0, 2.0, 1.0 ]
            |      },
            |      "data_meta": {
            |        "series_annotations": [
            |          { "type": "int", "column": "x" },
            |          { "type": "int", "column": "y" },
            |          { "type": "int", "column": "s" }
            |        ]
            |      },
            |      "kind": "plot",
            |      "layers": [
            |        {
            |          "geom": "point",
            |          "mapping": { "x": "x", "y": "y", "size": "s" }
            |        }
            |      ]
            |    },
            |    {
            |      "data": {
            |        "x": [ 1.0, 2.0, 3.0, 4.0, 5.0 ],
            |        "y": [ 1.0, 2.0, 3.0, 4.0, 5.0 ],
            |        "s": [ 5.0, 4.0, 3.0, 2.0, 1.0 ]
            |      },
            |      "data_meta": {
            |        "series_annotations": [
            |          { "type": "int", "column": "x" },
            |          { "type": "int", "column": "y" },
            |          { "type": "int", "column": "s" }
            |        ]
            |      },
            |      "coord": { "name": "polar" },
            |      "kind": "plot",
            |      "layers": [
            |        {
            |          "geom": "point",
            |          "mapping": { "x": "x", "y": "y", "size": "s" }
            |        }
            |      ]
            |    }
            |  ]
            |}
        """.trimMargin()

        return parsePlotSpec(spec)
    }

    private fun windRose(): MutableMap<String, Any> {
        val spec = """
            {
              "data": {
                "drct": [ 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 120.0, 120.0, 120.0, 120.0, 120.0, 120.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 150.0, 150.0, 150.0, 150.0, 150.0, 150.0, 160.0, 160.0, 160.0, 160.0, 160.0, 160.0, 170.0, 170.0, 170.0, 170.0, 170.0, 170.0, 180.0, 180.0, 180.0, 180.0, 180.0, 180.0, 190.0, 190.0, 190.0, 190.0, 190.0, 190.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 210.0, 210.0, 210.0, 210.0, 210.0, 210.0, 220.0, 220.0, 220.0, 220.0, 220.0, 220.0, 230.0, 230.0, 230.0, 230.0, 230.0, 230.0, 240.0, 240.0, 240.0, 240.0, 240.0, 240.0, 250.0, 250.0, 250.0, 250.0, 250.0, 250.0, 260.0, 260.0, 260.0, 260.0, 260.0, 260.0, 270.0, 270.0, 270.0, 270.0, 270.0, 270.0, 280.0, 280.0, 280.0, 280.0, 280.0, 280.0, 290.0, 290.0, 290.0, 290.0, 290.0, 290.0, 300.0, 300.0, 300.0, 300.0, 300.0, 300.0, 310.0, 310.0, 310.0, 310.0, 310.0, 310.0, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0, 330.0, 330.0, 330.0, 330.0, 330.0, 330.0, 340.0, 340.0, 340.0, 340.0, 340.0, 340.0, 350.0, 350.0, 350.0, 350.0, 350.0, 350.0, 360.0, 360.0, 360.0, 360.0, 360.0, 360.0],
                "speed_group": [ 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0],
                "count": [ 5864.0, 4326.0, 3203.0, 3284.0, 611.0, 103.0, 5577.0, 3652.0, 2330.0, 2307.0, 348.0, 82.0, 5322.0, 3513.0, 2248.0, 2172.0, 338.0, 71.0, 4775.0, 3030.0, 1534.0, 1151.0, 90.0, 15.0, 4100.0, 2159.0, 923.0, 427.0, 12.0, 2.0, 4619.0, 2601.0, 1092.0, 772.0, 77.0, 5.0, 5549.0, 3935.0, 1986.0, 1502.0, 218.0, 41.0, 6331.0, 4984.0, 3235.0, 2884.0, 354.0, 82.0, 6311.0, 5251.0, 3591.0, 3157.0, 356.0, 32.0, 7812.0, 6085.0, 4214.0, 3663.0, 423.0, 67.0, 12262.0, 10021.0, 6669.0, 6316.0, 1022.0, 277.0, 13024.0, 12079.0, 8138.0, 9060.0, 1737.0, 469.0, 11110.0, 11102.0, 8622.0, 9670.0, 1758.0, 351.0, 10504.0, 11225.0, 8292.0, 8697.0, 1457.0, 177.0, 9550.0, 11031.0, 8806.0, 9594.0, 1513.0, 205.0, 8076.0, 9943.0, 8339.0, 9644.0, 1897.0, 469.0, 7297.0, 8369.0, 6629.0, 9699.0, 2623.0, 943.0, 6186.0, 6588.0, 5414.0, 9225.0, 2640.0, 910.0, 6435.0, 6300.0, 5664.0, 9109.0, 2497.0, 818.0, 6002.0, 5802.0, 4983.0, 7511.0, 1944.0, 532.0, 5786.0, 5323.0, 4697.0, 6441.0, 1623.0, 427.0, 5235.0, 5075.0, 3922.0, 5424.0, 1292.0, 343.0, 4918.0, 4442.0, 3504.0, 4467.0, 859.0, 265.0, 5322.0, 5089.0, 3856.0, 4370.0, 734.0, 220.0, 5505.0, 5691.0, 4020.0, 3894.0, 768.0, 326.0, 5283.0, 6336.0, 5081.0, 5710.0, 1334.0, 677.0, 4881.0, 5654.0, 5013.0, 7242.0, 2071.0, 1080.0, 4304.0, 5384.0, 4608.0, 7775.0, 3125.0, 1667.0, 4793.0, 5791.0, 5431.0, 10105.0, 4624.0, 2593.0, 5012.0, 6159.0, 6660.0, 13799.0, 6196.0, 3897.0, 5454.0, 7234.0, 7840.0, 16356.0, 6910.0, 3999.0, 5041.0, 7145.0, 7866.0, 16074.0, 7652.0, 4391.0, 4954.0, 6463.0, 6334.0, 10989.0, 4859.0, 2639.0, 5940.0, 6940.0, 6130.0, 9849.0, 2983.0, 1263.0, 6782.0, 6182.0, 4982.0, 7035.0, 1682.0, 530.0, 7251.0, 5593.0, 3936.0, 4638.0, 837.0, 151.0],
                "percentage_of_total": [ 0.5965102522656505, 0.4400585524047074, 0.3258223632344609, 0.3340620171283077, 0.062153438631362974, 0.010477584581064462, 0.5673154292096747, 0.37149649407813023, 0.2370172046007786, 0.23467754979141467, 0.0353999945068974, 0.008341378015993066, 0.5413757780623794, 0.35735684109980054, 0.22867582658478552, 0.22094479330167002, 0.03438275328543484, 0.00722241267238424, 0.4857326832483767, 0.30822409010315843, 0.1560448033723581, 0.1170844645903417, 0.009155170993163122, 0.0015258618321938536, 0.4170689007996533, 0.2196223797137687, 0.09389136474099513, 0.0434362001564517, 0.0012206894657550828, 0.0002034482442925138, 0.46986372019356065, 0.26458444170241424, 0.11108274138371253, 0.07853102229691034, 0.007832757405261782, 0.0005086206107312845, 0.5644671537895796, 0.4002844206455209, 0.2020241065824662, 0.15278963146367788, 0.022175858627884005, 0.004170689007996533, 0.6440154173079524, 0.5069930247769444, 0.3290775351431411, 0.2933723682698049, 0.036010339239774945, 0.008341378015993066, 0.6419809348650274, 0.534153365389995, 0.36529132262720854, 0.3211430536157331, 0.03621378748406746, 0.0032551719086802208, 0.794668842206559, 0.6189912832599733, 0.42866545072432666, 0.37261545942173907, 0.04302930366786667, 0.0068155161837992135, 1.2473411857574022, 1.0193774280276406, 0.6783981705933874, 0.6424895554757586, 0.10396205283347455, 0.028177581834513164, 1.32485496683285, 1.2287256714046373, 0.8278309060262387, 0.9216205466450876, 0.17669480016804825, 0.04770861328659449, 1.1301549970449143, 1.1293412040677442, 0.8770653811450271, 0.9836722611543043, 0.17883100673311964, 0.03570516687333618, 1.0685101790242826, 1.1418532710917337, 0.8434964208367624, 0.8846946903059963, 0.1482120459670963, 0.018005169619887473, 0.9714653664967534, 1.1221187913953599, 0.8957826196199383, 0.9759412278711888, 0.1539085968072867, 0.020853445039982668, 0.8215240104531708, 1.0114429465002324, 0.8482774545776364, 0.9810274339785017, 0.19297065971144936, 0.04770861328659449, 0.7422809193012366, 0.851329178242024, 0.674329205707537, 0.9866222606965458, 0.26682237238963186, 0.09592584718392026, 0.6292654195967452, 0.6701585166995405, 0.5507343972998349, 0.9384050267992199, 0.26855168246611827, 0.09256895115309378, 0.6545947260111632, 0.6408619695214186, 0.5761654278363991, 0.9266050286302542, 0.2540051329992035, 0.08321033191563815, 0.610548181121834, 0.5902033566925826, 0.5068913006547981, 0.7640498814405356, 0.19775169345232343, 0.05411723298180867, 0.5885757707382424, 0.5414775021845255, 0.4777982017209687, 0.6552050707440408, 0.16509825024337496, 0.0434362001564517, 0.5325257794356549, 0.5162499198922538, 0.3989620070576196, 0.5517516385212975, 0.13142756581296391, 0.03489137389616612, 0.5002792327152915, 0.45185855057367313, 0.3564413240004842, 0.45440165362732965, 0.08738102092363469, 0.026956892368758083, 0.5413757780623794, 0.5176740576023015, 0.3922482149959667, 0.4445344137791427, 0.07466550565535257, 0.02237930687217652, 0.5599912924151443, 0.5789119791343481, 0.4089309710279528, 0.3961137316375244, 0.0781241258083253, 0.03316206381967975, 0.5374085372986752, 0.6445240379186837, 0.5168602646251313, 0.580844737455127, 0.13569997894310673, 0.06886723069301592, 0.49651544019588, 0.5751481866149366, 0.5099430243191858, 0.7366860925831925, 0.21067065696489806, 0.10986205191795746, 0.4378206217174897, 0.5476826736354472, 0.4687447548499518, 0.7909050496871475, 0.31788788170705284, 0.16957411161781027, 0.4875637174470093, 0.5890843913489737, 0.5524637073763212, 1.027922254287926, 0.47037234080429197, 0.26377064872524414, 0.5098413001970397, 0.6265188682987963, 0.677482653494071, 1.403691161496199, 0.6302826608182077, 0.39641890400396324, 0.5548033621856852, 0.7358722996060224, 0.7975171176266541, 1.663799741824178, 0.7029136840306353, 0.4067947644628814, 0.5127912997392811, 0.7268188527350056, 0.8001619448024568, 1.6351135393789333, 0.7783929826631578, 0.44667062034421406, 0.5039413011125567, 0.6574430014312584, 0.6443205896743912, 1.1178463782652173, 0.49427750950866234, 0.26844995834397195, 0.604241285548766, 0.7059654076950229, 0.6235688687565548, 1.0018808790184843, 0.30344305636228436, 0.1284775662707225, 0.6898929963959143, 0.6288585231081602, 0.5067895765326519, 0.7156291992989174, 0.17109997345000413, 0.053913784737516166, 0.7376016096825089, 0.5689430151640149, 0.4003861447676672, 0.47179647851433953, 0.08514309023641703, 0.015360342444084794]
              },
              "data_meta": {
                "series_annotations": [
                  {
                    "column": "speed_group",
                    "factor_levels": [ 0.0, 1.0, 2.0, 3.0, 4.0, 5.0 ],
                    "order": null
                  }
                ]
              },
              "theme": {
                "name": "minimal2",
                "axis_ontop": true,
                "panel_grid": {
                  "color": "#A0A0A0",
                  "blank": false
                },
                "panel_grid_ontop": true
              },
              "ggsize": {
                "width": 800.0,
                "height": 800.0
              },
              "coord": {
                "name": "polar",
                "ylim": [ -1.0, null ],
                "start": 0.08722222222222223
              },
              "kind": "plot",
              "scales": [
                {
                  "name": "Wind Speed:",
                  "aesthetic": "fill",
                  "breaks": [ 0.0, 1.0, 2.0, 3.0, 4.0, 5.0 ],
                  "labels": [ "2 - 4.9", "5 - 6.9", "7 - 9.9", "10 - 14.9", "15 - 19.9", "20+" ],
                  "values": [ "#002bff", "#03d3f8", "#7afe81", "#fde609", "#ff4404", "#780200" ]
                },
                {
                  "aesthetic": "x",
                  "breaks": [ 360.0, 45.0, 90.0, 135.0, 180.0, 225.0, 270.0, 315.0 ],
                  "labels": [ "N", "NE", "E", "SE", "S", "SW", "W", "NW" ]
                }
              ],
              "layers": [
                {
                  "geom": "bar",
                  "stat": "identity",
                  "mapping": {
                    "x": "drct",
                    "y": "percentage_of_total",
                    "fill": "speed_group"
                  },
                  "data_meta": {
                    "mapping_annotations": [
                      {
                        "aes": "fill",
                        "annotation": "as_discrete",
                        "parameters": {
                          "label": "speed_group",
                          "order_by": null,
                          "order": 1.0
                        }
                      }
                    ]
                  },
                  "size": 0.0,
                  "width": 0.8
                }
              ]
            }
        """.trimIndent()

        return parsePlotSpec(spec)
    }

    private fun geomSegment(): MutableMap<String, Any> {
        val spec = """
            {
              "theme": {
                "name": "grey"
              },
              "kind": "subplots",
              "layout": {
                "ncol": 2.0,
                "nrow": 1.0,
                "name": "grid"
              },
              "figures": [
                {
                  "data": {
                    "x": [ 0.0, 1.0 ],
                    "y": [ 0.0, 0.0 ],
                    "size": [ 8.0, 10.0 ],
                    "stroke": [ 1.0, 2.0 ],
                    "size_end": [ 10.0, 0.0 ],
                    "stroke_end": [ 2.0, 0.0 ]
                  },
                  "mapping": {
                    "x": "x",
                    "y": "y"
                  },
                  "kind": "plot",
                  "scales": [
                    {
                      "aesthetic": "size",
                      "guide": "none",
                      "scale_mapper_kind": "identity"
                    },
                    {
                      "aesthetic": "size_start",
                      "guide": "none",
                      "scale_mapper_kind": "identity"
                    },
                    {
                      "aesthetic": "size_end",
                      "guide": "none",
                      "scale_mapper_kind": "identity"
                    }
                  ],
                  "layers": [
                    {
                      "geom": "point",
                      "mapping": {
                        "size": "size",
                        "stroke": "stroke"
                      },
                      "show_legend": false,
                      "data_meta": {},
                      "shape": 21.0,
                      "alpha": 0.5,
                      "color": "red"
                    },
                    {
                      "geom": "segment",
                      "mapping": {
                        "size_start": "size",
                        "stroke_start": "stroke",
                        "size_end": "size_end",
                        "stroke_end": "stroke_end"
                      },
                      "data_meta": {},
                      "arrow": {
                        "name": "arrow",
                        "angle": 30.0,
                        "length": 22.0,
                        "ends": "both",
                        "type": "open"
                      },
                      "xend": 1.0,
                      "yend": 0.0,
                      "size": 2.0
                    }
                  ],
                  "metainfo_list": []
                },
                {
                  "data": {
                    "x": [ 0.0, 1.0 ],
                    "y": [ 0.0, 0.0 ],
                    "size": [ 8.0, 10.0 ],
                    "stroke": [ 1.0, 2.0 ],
                    "size_end": [ 10.0, 0.0 ],
                    "stroke_end": [ 2.0, 0.0 ]
                  },
                  "mapping": {
                    "x": "x",
                    "y": "y"
                  },
                  "coord": {
                    "name": "polar",
                    "xlim": [ -0.35, 1.35 ],
                    "ylim": [ -2.0, 2.0 ]
                  },
                  "kind": "plot",
                  "scales": [
                    {
                      "aesthetic": "size",
                      "guide": "none",
                      "scale_mapper_kind": "identity"
                    },
                    {
                      "aesthetic": "size_start",
                      "guide": "none",
                      "scale_mapper_kind": "identity"
                    },
                    {
                      "aesthetic": "size_end",
                      "guide": "none",
                      "scale_mapper_kind": "identity"
                    }
                  ],
                  "layers": [
                    {
                      "geom": "point",
                      "mapping": {
                        "size": "size",
                        "stroke": "stroke"
                      },
                      "show_legend": false,
                      "shape": 21.0,
                      "alpha": 0.5,
                      "color": "red"
                    },
                    {
                      "geom": "segment",
                      "mapping": {
                        "size_start": "size",
                        "stroke_start": "stroke",
                        "size_end": "size_end",
                        "stroke_end": "stroke_end"
                      },
                      "arrow": {
                        "name": "arrow",
                        "angle": 30.0,
                        "length": 22.0,
                        "ends": "both",
                        "type": "open"
                      },
                      "xend": 1.0,
                      "yend": 0.0,
                      "size": 2.0
                    }
                  ]
                }
              ]
            }
        """.trimIndent()

        return parsePlotSpec(spec)
    }

    private fun geomTile(): MutableMap<String, Any> {
        val data = """
            {
                    "time": [ 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0],
                    "day": [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0],
                    "temp": [ 3.0, 4.125, 5.25, 6.375, 7.5, 8.625, 9.75, 10.875, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 15.5, 13.0, 10.5, 8.0, 6.8, 5.6, 4.4, 3.2, 2.0, 2.0, 2.625, 3.25, 3.875, 4.5, 5.125, 5.75, 6.375, 7.0, 7.666666666666667, 8.333333333333334, 9.0, 9.666666666666666, 10.333333333333332, 11.0, 9.5, 8.0, 6.5, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 1.375, 2.75, 4.125, 5.5, 6.875, 8.25, 9.625, 11.0, 11.666666666666666, 12.333333333333334, 13.0, 13.666666666666666, 14.333333333333332, 15.0, 14.5, 14.0, 13.5, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 8.0, 7.875, 7.75, 7.625, 7.5, 7.375, 7.25, 7.125, 7.0, 7.666666666666667, 8.333333333333334, 9.0, 9.666666666666666, 10.333333333333332, 11.0, 9.5, 8.0, 6.5, 5.0, 4.4, 3.8, 3.2, 2.6, 2.0, 2.0, 3.25, 4.5, 5.75, 7.0, 8.25, 9.5, 10.75, 12.0, 13.333333333333334, 14.666666666666666, 16.0, 17.333333333333332, 18.666666666666664, 20.0, 18.75, 17.5, 16.25, 15.0, 14.4, 13.8, 13.2, 12.6, 12.0, 12.0, 12.25, 12.5, 12.75, 13.0, 13.25, 13.5, 13.75, 14.0, 15.333333333333334, 16.666666666666668, 18.0, 19.333333333333332, 20.666666666666664, 22.0, 21.25, 20.5, 19.75, 19.0, 18.2, 17.4, 16.6, 15.8, 15.0, 15.0, 14.75, 14.5, 14.25, 14.0, 13.75, 13.5, 13.25, 13.0, 15.166666666666666, 17.333333333333332, 19.5, 21.666666666666664, 23.833333333333332, 26.0, 25.0, 24.0, 23.0, 22.0, 19.8, 17.6, 15.399999999999999, 13.2, 11.0]
            }
        """.trimIndent()
        val spec = """
            {
              "theme": {
                "name": "grey"
              },
              "ggsize": {
                "width": 1200.0,
                "height": 600.0
              },
              "kind": "subplots",
              "layout": {
                "ncol": 2.0,
                "nrow": 1.0,
                "name": "grid"
              },
              "figures": [
                {
                  "data": $data,
                  "mapping": {},
                  "data_meta": {},
                  "kind": "plot",
                  "scales": [
                    {
                      "aesthetic": "fill",
                      "scale_mapper_kind": "color_cmap"
                    },
                    {
                      "aesthetic": "x",
                      "format": "{.1d}:00"
                    },
                    {
                      "aesthetic": "y",
                      "breaks": [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0],
                      "labels": [ "Mon", "Tue", "Wen", "Thu", "Fri", "Sat", "Sun"],
                      "discrete": true,
                      "reverse": false
                    }
                  ],
                  "layers": [
                    {
                      "geom": "tile",
                      "mapping": {
                        "x": "time",
                        "y": "day",
                        "fill": "temp"
                      },
                      "tooltips": {
                        "formats": [
                          {
                            "field": "^x",
                            "format": "{.1d}:00"
                          }
                        ]
                      },
                      "data_meta": {}
                    }
                  ],
                  "metainfo_list": []
                },
                {
                  "data": $data,
                  "mapping": {},
                  "data_meta": {},
                  "theme": {
                    "name": "grey",
                    "panel_inset": [ 0.0, 20.0, 0.0, 20.0 ]
                  },
                  "coord": {
                    "name": "polar",
                    "ylim": [ -2.0, null ],
                    "start": -0.13083333333333333
                  },
                  "kind": "plot",
                  "scales": [
                    {
                      "aesthetic": "fill",
                      "scale_mapper_kind": "color_cmap"
                    },
                    {
                      "aesthetic": "x",
                      "format": "{.1d}:00"
                    },
                    {
                      "aesthetic": "y",
                      "breaks": [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ],
                      "labels": [ "Mon", "Tue", "Wen", "Thu", "Fri", "Sat", "Sun" ],
                      "discrete": true,
                      "reverse": false
                    }
                  ],
                  "layers": [
                    {
                      "geom": "tile",
                      "mapping": {
                        "x": "time",
                        "y": "day",
                        "fill": "temp"
                      },
                      "tooltips": {
                        "formats": [
                          {
                            "field": "^x",
                            "format": "{.1d}:00"
                          }
                        ]
                      },
                      "data_meta": {}
                    }
                  ],
                  "metainfo_list": []
                }
              ]
            }
        """.trimIndent()

        return parsePlotSpec(spec)
    }

    private fun geomBarDodge(): MutableMap<String, Any> {
        val spec = """
            {
  "kind": "subplots",
  "layout": { "ncol": 3.0, "nrow": 1.0, "name": "grid" },
  "figures": [
    {
      "data": { "foo": [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0 ] },
      "kind": "plot",
      "layers": [
        { "geom": "bar", "mapping": { "fill": "foo" },
          "size": 0.0,
          "position": "dodge",
          "data_meta": {
            "mapping_annotations": [
              {
                "aes": "fill",
                "annotation": "as_discrete",
                "parameters": { "label": "foo","order": 1.0 }
              }
            ]
          }
        }
      ]
    },
    {
      "data": { "foo": [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0 ] },
      "coord": { "name": "polar", "theta": "y" },
      "ggtitle": { "text": "position=dodge, coord_polar(theta=y)" },
      "kind": "plot",
      "scales": [
        { "aesthetic": "x", "expand": [ 0.0, 0.0 ] },
        { "aesthetic": "y", "expand": [ 0.0, 0.0 ] }
      ],
      "layers": [
        {
          "geom": "bar",
          "size": 0.0,
          "mapping": { "fill": "foo" },
          "position": "dodge",
          "data_meta": {
            "mapping_annotations": [
              {
                "aes": "fill",
                "annotation": "as_discrete",
                "parameters": { "label": "foo", "order": 1.0 }
              }
            ]
          }
        }
      ]
    },
    {
      "data": { "foo": [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0 ] },
      "coord": { "name": "polar", "theta": "x" },
      "ggtitle": { "text": "position=dodge, coord_polar(theta=x)" },
      "kind": "plot",
      "scales": [
        { "aesthetic": "x", "expand": [ 0.0, 0.0 ] },
        { "aesthetic": "y", "expand": [ 0.0, 0.0 ] }
      ],
      "layers": [
        {
          "geom": "bar",
          "size": 0.0,
          "mapping": { "fill": "foo" },
          "position": "dodge",
          "data_meta": {
            "mapping_annotations": [
              {
                "aes": "fill",
                "annotation": "as_discrete",
                "parameters": { "label": "foo", "order": 1.0 }
              }
            ]
          }
        }
      ]
    }
  ]
}
"""
        return parsePlotSpec(spec)
    }


    private fun path(): MutableMap<String, Any> {
        val spec = """
{
  "kind": "subplots",
  "layout": { "ncol": 2.0, "nrow": 1.0, "name": "grid" },
  "figures": [
    {
      "data": {
        "x": [ 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0 ],
        "y": [ 0.0, 45.0, 90.0, 135.0, 180.0, 225.0, 270.0, 315.0, 360.0 ],
        "l": [ "0", "45", "90", "135", "180", "225", "270", "315", "360" ],
        "g": [ "1", "1", "1", "2", "2", "2", "3", "3", "3" ]
      },
      "mapping": { "x": "x", "y": "y", "color": "y" },
      "coord": { "name": "polar" },
      "ggtitle": { "text": "coord_polar()" },
      "kind": "plot",
      "scales": [
        { "aesthetic": "color", "palette": "GnBu", "scale_mapper_kind": "color_brewer" },
        { "aesthetic": "x", "expand": [ 0.0, 0.0 ] },
        { "aesthetic": "y", "expand": [ 0.0, 0.0 ] }
      ],
      "layers": [
        { "geom": "path", "size": 3.0 }
      ]
    },
    {
      "data": {
        "x": [ 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0 ],
        "y": [ 0.0, 45.0, 90.0, 135.0, 180.0, 225.0, 270.0, 315.0, 360.0 ],
        "l": [ "0", "45", "90", "135", "180", "225", "270", "315", "360" ],
        "g": [ "1", "1", "1", "2", "2", "2", "3", "3", "3" ]
      },
      "mapping": { "x": "x", "y": "y", "color": "y" },
      "coord": { "name": "polar", "theta": "x" },
      "ggtitle": { "text": "coord_polar(), flat=True" },
      "kind": "plot",
      "scales": [
        { "aesthetic": "color", "palette": "GnBu", "scale_mapper_kind": "color_brewer" },
        { "aesthetic": "x", "expand": [ 0.0, 0.0 ] },
        { "aesthetic": "y", "expand": [ 0.0, 0.0 ] }
      ],
      "layers": [
        { "geom": "path", "flat": true, "size": 3.0 }
      ]
    }
  ]
}        """.trimIndent()
        return parsePlotSpec(spec)
    }

    private fun geomBarStack(): MutableMap<String, Any> {
        val spec = """
{
  "kind": "subplots",
  "layout": { "ncol": 3.0, "nrow": 1.0, "name": "grid" },
  "figures": [
    {
      "data": { "foo": [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0 ] },
      "kind": "plot",
      "layers": [
        {
          "geom": "bar",
          "mapping": { "fill": "foo" },
          "data_meta": {
            "mapping_annotations": [
              {
                "aes": "fill",
                "annotation": "as_discrete",
                "parameters": { "label": "foo", "order": 1.0 }
              }
            ]
          },
          "size": 0.0
        }
      ]
    },
    {
      "data": { "foo": [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0 ] },
      "coord": { "name": "polar", "theta": "y" },
      "ggtitle": { "text": "coord_polar(theta=\"y\")" },
      "kind": "plot",
      "scales": [
        { "aesthetic": "x", "expand": [ 0.0, 0.0 ] },
        { "aesthetic": "y", "expand": [ 0.0, 0.0 ] }
      ],
      "layers": [
        {
          "geom": "bar",
          "mapping": { "fill": "foo" },
          "size": 0.0,
          "data_meta": {
            "mapping_annotations": [
              { "aes": "fill", "annotation": "as_discrete", "parameters": { "label": "foo", "order": 1.0 } }
            ]
          }
        }
      ]
    },
    {
      "data": { "foo": [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0 ] },
      "coord": { "name": "polar", "theta": "x" },
      "ggtitle": { "text": "coord_polar(theta=\"x\")" },
      "kind": "plot",
      "scales": [
        { "aesthetic": "x", "expand": [ 0.0, 0.0 ] },
        { "aesthetic": "y", "expand": [ 0.0, 0.0 ] }
      ],
      "layers": [
        {
          "geom": "bar",
          "mapping": { "fill": "foo" },
          "size": 0.0,
          "data_meta": {
            "mapping_annotations": [
              {
                "aes": "fill",
                "annotation": "as_discrete",
                "parameters": { "label": "foo", "order_by": null, "order": 1.0 }
              }
            ]
          }
        }
      ]
    }
  ]
}
        """.trimIndent()

        return parsePlotSpec(spec)
    }

    private fun textSpiral(zeroExtend: Boolean = false): MutableMap<String, Any> {
        val spec = """
{
  "kind": "subplots",
  "layout": { "ncol": 2.0, "nrow": 1.0, "name": "grid" },
  "figures": [
    {
      "data": {
        "x": [ 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0 ],
        "y": [ 0.0, 45.0, 90.0, 135.0, 180.0, 225.0, 270.0, 315.0, 360.0 ],
        "l": [ "(0, 0)", "(1, 45)", "(2, 90)", "(3, 135)", "(4, 180)", "(5, 225)", "(6, 270)", "(7, 315)", "(8, 360)" ]
      },
      "mapping": { "x": "x", "y": "y", "label": "l" },
      "kind": "plot",
      "scales": [
        { "name": "", "aesthetic": "x" },
        { "name": "", "aesthetic": "y" }
      ],
      "layers": [ { "geom": "label" } ]
    },
    {
      "data": {
        "x": [ 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0 ],
        "y": [ 0.0, 45.0, 90.0, 135.0, 180.0, 225.0, 270.0, 315.0, 360.0 ],
        "l": [ "0", "45", "90", "135", "180", "225", "270", "315", "360" ]
      },
      "mapping": { "x": "x", "y": "y", "label": "l" },
      "coord": { "name": "polar", "theta": "y" },
      "kind": "plot",
      "scales": [
        { "name": "", "aesthetic": "x" },
        { "name": "", "aesthetic": "y" },
        { "aesthetic": "x", "expand": [ 0.0, 0.0 ] },
        { "aesthetic": "y", "expand": [ 0.0, 0.0 ] }
      ],
      "layers": [ { "geom": "label" } ]
    }
  ]
}
""".trimMargin()

        val plotSpec = parsePlotSpec(spec)
        if (!zeroExtend) {
            plotSpec.remove("scales")
        }

        return plotSpec
    }
}
