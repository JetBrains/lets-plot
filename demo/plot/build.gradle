plugins {
    id "org.jetbrains.kotlin.multiplatform"
}


/*
 * Copyright (c) 2019. JetBrains s.r.o.
 * Use of this source code is governed by the MIT license that can be found in the LICENSE file.
 */

kotlin {
    jvm()
    jvm("jvmBatik")
    jvm("jvmJfx")
    jvm("jvmBrowser")
    js() {
        browser()
        binaries.executable()
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')

                implementation project(':commons')
                implementation project(':datamodel')
                implementation project(':plot-base')
                implementation project(':plot-builder')
                implementation project(':plot-stem')
                implementation project(':demo-plot-common')
                implementation project(':demo-common-util')
                implementation project(':demo-and-test-shared')
            }
        }

        allJvm {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation "io.github.microutils:kotlin-logging-jvm:$kotlinLogging_version"
                implementation "org.slf4j:slf4j-simple:$slf4j_version"  // Enable logging to console
            }
        }
        jvmMain {
            dependsOn allJvm
        }
        jvmBatikMain {
            dependsOn allJvm
            dependsOn jvmMain
            dependencies {
                implementation project(':demo-common-batik')
                implementation project(':platf-awt')
                implementation project(':platf-batik')

                implementation("org.apache.xmlgraphics:batik-codec:$batik_version")
            }
        }
        jvmJfxMain {
            dependsOn allJvm
            dependsOn jvmMain
            dependencies {
                implementation project(':canvas')
                implementation project(':platf-awt')
                implementation project(':platf-jfx-swing')
                implementation project(':demo-common-jfx')

                compileOnly("org.openjfx:javafx-base:$jfx_version:${jfx_platform()}")
                compileOnly("org.openjfx:javafx-graphics:$jfx_version:${jfx_platform()}")
                compileOnly("org.openjfx:javafx-swing:$jfx_version:${jfx_platform()}")
            }
        }
        jvmBrowserMain {
            dependsOn allJvm
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-html-jvm:${kotlinx_html_version}"
                implementation project(':platf-awt')
            }
        }

        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
                implementation project(':platf-w3c')

                languageSettings.optIn("kotlin.js.ExperimentalJsExport")
            }
        }
    }
}


// Fix Gradle 7 error:
// Execution failed for task ':plot-demo:jvm*Jar'.
// Entry diamonds.csv is a duplicate but no duplicate handling strategy has been set.
jvmJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jvmBatikJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jvmBrowserJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jvmJfxJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
