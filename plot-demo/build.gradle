plugins {
    id "org.jetbrains.kotlin.multiplatform"
    id "org.jetbrains.gradle.plugin.idea-ext"
}


/*
 * Copyright (c) 2019. JetBrains s.r.o.
 * Use of this source code is governed by the MIT license that can be found in the LICENSE file.
 */

kotlin {
    jvm()
    jvm("jvmBatik")
    jvm("jvmJfx")
    jvm("jvmBrowser")
    js {
        browser {
            dceTask {
                keep.addAll(
                        "lets-plot-plot-demo.jetbrains.datalore.plotDemo.component.axisComponentDemo",
                        "lets-plot-plot-demo.jetbrains.datalore.plotDemo.plotAssembler.linearRegressionDemo",
                        "lets-plot-plot-demo.jetbrains.datalore.plotDemo.plotAssembler.loessRegressionDemo",
                )
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

                implementation project(':base-portable')
                implementation project(':base')
                implementation project(':mapper-core')
                implementation project(':vis-svg-portable')
                implementation project(':vis-svg-mapper')
                implementation project(':plot-base-portable')
                implementation project(':plot-base')
                implementation project(':plot-common-portable')
                implementation project(':plot-common')
                implementation project(':plot-builder-portable')
                implementation project(':plot-builder')
                implementation project(':plot-config-portable')
                implementation project(':plot-config')
                implementation project(':plot-image-export')
                implementation project(':plot-demo-common')
                implementation project(':vis-demo-common')
            }
        }

        allJvm {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                compileOnly "io.github.microutils:kotlin-logging:$kotlinLogging_version"
                implementation "org.slf4j:slf4j-simple:$slf4j_version"  // Enable logging to console
            }
        }
        jvmMain {
            dependsOn allJvm
        }
        jvmBatikMain {
            dependsOn allJvm
            dependsOn jvmMain
            dependencies {
                implementation project(':vis-svg-mapper-batik')
                implementation project(':vis-demo-common-batik')
            }
        }
        jvmJfxMain {
            dependsOn allJvm
            dependsOn jvmMain
            dependencies {
                implementation project(':vis-canvas')
                implementation project(':vis-svg-mapper-jfx')
                implementation project(':vis-demo-common-jfx')
            }
        }
        jvmBrowserMain {
            dependsOn allJvm
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-html-jvm:${kotlinx_html_version}"
            }
        }

        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
            }
        }
    }
}

idea {
    module {
        settings {
            packagePrefix["src/jvmMain/kotlin"] = "jetbrains.datalore"
            packagePrefix["src/jvmBatikMain/kotlin"] = "jetbrains.datalore"
            packagePrefix["src/jvmJfxMain/kotlin"] = "jetbrains.datalore"
            packagePrefix["src/jvmBrowserMain/kotlin"] = "jetbrains.datalore"
            packagePrefix["src/jvmTest/kotlin"] = "jetbrains.datalore"
        }
    }
}


// Workaround for Idea/Gradle bug: https://youtrack.jetbrains.com/issue/KT-24463
// MPP: Run does not add resource directory to classpath [Cannot get resource when using common module]
// 
// JavaFX Scene mapping requires stylesheet resource URI 
task copyProcessedResources(type: Copy) {
    from "${project.buildDir}/processedResources"
    into "${project.buildDir}/classes/kotlin"
}

build.dependsOn += copyProcessedResources