/*
 * Copyright (c) 2019. JetBrains s.r.o.
 * Use of this source code is governed by the MIT license that can be found in the LICENSE file.
 */

plugins {
    id "org.jetbrains.kotlin.multiplatform"
}

import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

def currentOs = DefaultNativePlatform.getCurrentOperatingSystem()

kotlin {

    def target
    if (currentOs.macOsX & project.pythonArch == "x86_64") {
        target = macosX64("native")
    } else if (currentOs.macOsX & project.pythonArch == "arm64") {
        target = macosArm64("native")
    } else if (currentOs.linux & project.pythonArch == "x86_64") {
        target = linuxX64("native")
    } else if (currentOs.linux & project.pythonArch == "arm64") {
        target = linuxArm64("native")
    } else if (currentOs.windows) {
        target = mingwX64("native")
    } else {
        throw new Exception("Unsupported platform.")
    }

    target.binaries {
        staticLib {
            baseName = "lets-plot-${project.name}"
        }
    }
    target.compilations.main.cinterops {
        python {
            compilerOpts "-I${project.buildSettings.python.include_path}"
        }
    }

    sourceSets {
        all {
            languageSettings.optIn("kotlinx.cinterop.ExperimentalForeignApi")
        }

        nativeMain {
            dependencies {
                implementation kotlin('stdlib-common')

                implementation project(':commons')
                implementation project(':datamodel')
                implementation project(':plot-base')
                implementation project(':plot-builder')
                implementation project(':plot-stem')
                implementation project(':platf-native')
            }
        }
    }
}
