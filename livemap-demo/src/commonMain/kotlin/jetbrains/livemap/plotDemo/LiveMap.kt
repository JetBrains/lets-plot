/*
 * Copyright (c) 2020. JetBrains s.r.o.
 * Use of this source code is governed by the MIT license that can be found in the LICENSE file.
 */

package jetbrains.livemap.plotDemo

import jetbrains.datalore.plot.parsePlotSpec
import kotlin.random.Random

class LiveMap {
    fun plotSpecList(): List<MutableMap<String, Any>> {
        return listOf(
//            titanic(),
            airports(),
//            georeference(),
//            blankPoint(),
//            blankMap(),
//            barWithNanValuesInData(),
//            pieWithNanValuesInData(),
//            pieWithNullValuesInData(),
//            barWithNullValuesInData()
//            multiLayerTooltips()
//            mapJoinBar(),
//            antiMeridian(),
//            tooltips(),
//            symbol_point(),
//            geom_point()
//            fourPointsTwoLayers(),
//            basic(),
//            bunch(),
//           facet()
        )
    }

    private fun titanic(): MutableMap<String, Any> {
        val spec = """
{
    'ggsize': {'width': 800, 'height': 300},
    'kind': 'plot',
    'layers': [
    {
        'geom': 'livemap',
        'map': {
            'city': ['Southampton', 'Cherbourg', 'Cobh'],
            'found name': ['Southampton', 'Cherbourg', 'Cobh'],
            'geometry': [
                '{\"type\": \"Point\", \"coordinates\": [-1.40253666522018, 50.9183686226606]}', 
                '{\"type\": \"Point\", \"coordinates\": [-1.60901494773099, 49.6272752434015]}', 
                '{\"type\": \"Point\", \"coordinates\": [-8.29427875578403, 51.8531472980976]}'
            ]
        },
        'tiles': {'kind': 'raster_zxy',
        'url': 'https://cartocdn_c.global.ssl.fastly.net/base-antique/{z}/{x}/{y}@2x.png',
        'attribution': '<a href=\"https://www.openstreetmap.org/copyright\">© OpenStreetMap contributors</a> <a href=\"https://carto.com/attributions#basemaps\">© CARTO</a>, <a href=\"https://carto.com/attributions\">© CARTO</a>'},
        'geocoding': {'url': 'http://10.0.0.127:3020/map_data/geocoding'},
        'size': 7,
        'shape': 21,
        'color': 'black',
        'fill': 'yellow',
        'map_data_meta': { 'geodataframe': { 'geometry': 'geometry' } }
    },
   {
        'geom': 'path',
        'map': {
            'geometry': [
                '{\"type\": \"LineString\", \"coordinates\": [[-1.40253666522018, 50.9183686226606], [-1.60901494773099, 49.6272752434015], [-8.29427875578403, 51.8531472980976], [-38.056641, 46.920255]]}'
            ]
        },
        'color': 'dark-blue',
        'linetype': 'dotted',
        'size': 1.2,
        'map_data_meta': {'geodataframe': {'geometry': 'geometry'}}},
  {
        'geom': 'segment',
        'x': -38.056641,
        'y': 46.920255,
        'xend': -73.8673749469137,
        'yend': 40.6847005337477,
        'color': 'gray',
        'linetype': 'dotted',
        'size': 1.2
  },
  {
        'geom': 'point',
        'x': -73.8673749469137,
        'y': 40.6847005337477,
        'size': 7,
        'shape': 21,
        'color': 'black',
        'fill': 'white'
  },
  {
        'geom': 'point',
        'x': -38.056641,
        'y': 46.920255,
        'size': 10,
        'shape': 9,
        'color': 'red'
  }
]}"""
        return parsePlotSpec(spec)
    }

    private fun airports(): MutableMap<String, Any> {
        val spec = """
{
  "mapping": {},
  "data_meta": {},
  "theme": {
    "legend_position": "none"
  },
  "ggsize": {
    "width": 900,
    "height": 520
  },
  "kind": "plot",
  "scales": [
    {
      "aesthetic": "fill",
      "values": [
        "#30a2da",
        "#fc4f30"
      ]
    },
    {
      "aesthetic": "size",
      "trans": "sqrt",
      "range": [
        10,
        40
      ]
    }
  ],
  "layers": [
    {
      "geom": "livemap",
      "mapping": {},
      "data_meta": {},
      "location": {
        "type": "coordinates",
        "data": [
          26.65,
          38.61
        ]
      },
      "zoom": 6,
      "tiles": {
        "kind": "raster_zxy",
        "url": "https://gibs.earthdata.nasa.gov/wmts/epsg3857/best/VIIRS_CityLights_2012/default//GoogleMapsCompatible_Level8/{z}/{y}/{x}.jpg",
        "attribution": "<a href=\"https://earthdata.nasa.gov/eosdis/science-system-description/eosdis-components/gibs\">\u00a9 NASA Global Imagery Browse Services (GIBS)</a>",
        "max_zoom": 8
      },
      "geocoding": {
        "url": "http://10.0.0.127:3020/map_data/geocoding"
      }
    },
    {
      "geom": "polygon",
      "data": {
        "country": [
          "GR",
          "TR"
        ],
        "found name": [
          "\u0395\u03bb\u03bb\u03ac\u03c2",
          "T\u00fcrkiye"
        ],
        "geometry": [
          "{\"type\": \"MultiPolygon\", \"coordinates\": [[[[23.73046875, 37.9961626797281], [23.5546875, 37.857507156252], [23.5546875, 37.9961626797281], [23.37890625, 37.9961626797281], [23.203125, 37.9961626797281], [23.203125, 37.857507156252], [23.203125, 37.7185903255881], [23.203125, 37.5794125134384], [23.37890625, 37.5794125134384], [23.5546875, 37.5794125134384], [23.5546875, 37.4399740522706], [23.37890625, 37.4399740522706], [23.203125, 37.4399740522706], [23.203125, 37.3002752813443], [23.02734375, 37.3002752813443], [23.02734375, 37.4399740522706], [23.02734375, 37.5794125134384], [22.8515625, 37.5794125134384], [22.67578125, 37.5794125134384], [22.67578125, 37.4399740522706], [22.8515625, 37.4399740522706], [22.8515625, 37.3002752813443], [22.8515625, 37.1603165467368], [23.02734375, 37.1603165467368], [23.02734375, 37.0200982013681], [23.02734375, 36.8796206050268], [23.02734375, 36.7388841243943], [23.02734375, 36.5978891330702], [22.8515625, 36.5978891330702], [22.8515625, 36.7388841243943], [22.67578125, 36.7388841243943], [22.5, 36.7388841243943], [22.5, 36.5978891330702], [22.5, 36.4566360115962], [22.32421875, 36.4566360115962], [22.32421875, 36.5978891330702], [22.32421875, 36.7388841243943], [22.32421875, 36.8796206050268], [22.1484375, 36.8796206050268], [22.1484375, 37.0200982013681], [21.97265625, 37.0200982013681], [21.97265625, 36.8796206050268], [21.97265625, 36.7388841243943], [21.796875, 36.7388841243943], [21.796875, 36.8796206050268], [21.62109375, 36.8796206050268], [21.62109375, 37.0200982013681], [21.62109375, 37.1603165467368], [21.62109375, 37.3002752813443], [21.62109375, 37.4399740522706], [21.62109375, 37.5794125134384], [21.4453125, 37.5794125134384], [21.4453125, 37.7185903255881], [21.26953125, 37.7185903255881], [21.26953125, 37.857507156252], [21.09375, 37.857507156252], [21.26953125, 37.9961626797281], [21.26953125, 38.1345565770541], [21.4453125, 38.1345565770541], [21.4453125, 38.272688535981], [21.4453125, 38.4105582509461], [21.26953125, 38.4105582509461], [21.26953125, 38.272688535981], [21.09375, 38.272688535981], [21.09375, 38.4105582509461], [21.09375, 38.5481654230466], [21.09375, 38.685509760012], [20.91796875, 38.685509760012], [20.91796875, 38.8225909761771], [20.7421875, 38.8225909761771], [20.7421875, 38.9594087924542], [20.7421875, 39.0959629363055], [20.56640625, 39.0959629363055], [20.56640625, 39.2322531417149], [20.390625, 39.2322531417149], [20.21484375, 39.3682791491601], [20.21484375, 39.5040407055842], [20.21484375, 39.6395375643667], [20.21484375, 39.7747694852955], [20.390625, 39.7747694852955], [20.390625, 39.9097362345372], [20.390625, 40.0444375846086], [20.56640625, 40.0444375846086], [20.7421875, 40.0444375846086], [20.7421875, 40.178873314347], [20.7421875, 40.3130432088809], [20.7421875, 40.4469470596005], [20.91796875, 40.4469470596005], [20.91796875, 40.5805846641276], [21.09375, 40.5805846641276], [21.09375, 40.713955826286], [20.91796875, 40.713955826286], [20.91796875, 40.8470603560712], [21.09375, 40.8470603560712], [21.26953125, 40.8470603560712], [21.4453125, 40.8470603560712], [21.62109375, 40.8470603560712], [21.62109375, 40.9798980696201], [21.796875, 40.9798980696201], [21.97265625, 40.9798980696201], [21.97265625, 41.1124687891809], [22.1484375, 41.1124687891809], [22.32421875, 41.1124687891809], [22.5, 41.1124687891809], [22.67578125, 41.1124687891809], [22.67578125, 41.2447723430821], [22.67578125, 41.3768085657023], [22.8515625, 41.3768085657023], [23.02734375, 41.3768085657023], [23.203125, 41.3768085657023], [23.37890625, 41.3768085657023], [23.5546875, 41.3768085657023], [23.73046875, 41.3768085657023], [23.90625, 41.3768085657023], [23.90625, 41.5085772974393], [24.08203125, 41.5085772974393], [24.2578125, 41.5085772974393], [24.43359375, 41.5085772974393], [24.609375, 41.5085772974393], [24.609375, 41.3768085657023], [24.78515625, 41.3768085657023], [24.9609375, 41.3768085657023], [25.13671875, 41.3768085657023], [25.13671875, 41.2447723430821], [25.3125, 41.2447723430821], [25.48828125, 41.2447723430821], [25.48828125, 41.3768085657023], [25.6640625, 41.3768085657023], [25.83984375, 41.3768085657023], [26.015625, 41.3768085657023], [26.19140625, 41.3768085657023], [26.19140625, 41.5085772974393], [26.19140625, 41.6400783846789], [26.015625, 41.6400783846789], [26.015625, 41.7713116797641], [26.19140625, 41.7713116797641], [26.3671875, 41.7713116797641], [26.3671875, 41.6400783846789], [26.54296875, 41.6400783846789], [26.54296875, 41.5085772974393], [26.54296875, 41.3768085657023], [26.54296875, 41.2447723430821], [26.3671875, 41.2447723430821], [26.3671875, 41.1124687891809], [26.3671875, 40.9798980696201], [26.3671875, 40.8470603560712], [26.19140625, 40.8470603560712], [26.19140625, 40.713955826286], [26.015625, 40.713955826286], [26.015625, 40.8470603560712], [25.83984375, 40.8470603560712], [25.6640625, 40.8470603560712], [25.48828125, 40.8470603560712], [25.3125, 40.8470603560712], [25.3125, 40.9798980696201], [25.13671875, 40.9798980696201], [24.9609375, 40.9798980696201], [24.9609375, 40.8470603560712], [24.78515625, 40.8470603560712], [24.78515625, 40.713955826286], [24.78515625, 40.5805846641276], [24.609375, 40.5805846641276], [24.43359375, 40.5805846641276], [24.43359375, 40.713955826286], [24.609375, 40.713955826286], [24.609375, 40.8470603560712], [24.609375, 40.9798980696201], [24.43359375, 40.9798980696201], [24.43359375, 40.8470603560712], [24.2578125, 40.8470603560712], [24.2578125, 40.713955826286], [24.08203125, 40.713955826286], [23.90625, 40.713955826286], [23.90625, 40.8470603560712], [23.73046875, 40.713955826286], [23.73046875, 40.5805846641276], [23.90625, 40.5805846641276], [23.90625, 40.4469470596005], [24.08203125, 40.4469470596005], [24.08203125, 40.3130432088809], [23.90625, 40.3130432088809], [23.73046875, 40.3130432088809], [23.73046875, 40.178873314347], [23.90625, 40.178873314347], [23.90625, 40.0444375846086], [23.73046875, 40.0444375846086], [23.73046875, 39.9097362345372], [23.5546875, 39.9097362345372], [23.37890625, 39.9097362345372], [23.37890625, 40.0444375846086], [23.37890625, 40.178873314347], [23.203125, 40.178873314347], [23.203125, 40.3130432088809], [23.02734375, 40.3130432088809], [22.8515625, 40.4469470596005], [23.02734375, 40.5805846641276], [22.8515625, 40.5805846641276], [22.67578125, 40.5805846641276], [22.67578125, 40.4469470596005], [22.67578125, 40.3130432088809], [22.5, 40.178873314347], [22.5, 40.0444375846086], [22.67578125, 40.0444375846086], [22.67578125, 39.9097362345372], [22.8515625, 39.9097362345372], [22.8515625, 39.7747694852955], [22.8515625, 39.6395375643667], [23.02734375, 39.6395375643667], [23.02734375, 39.5040407055842], [23.203125, 39.5040407055842], [23.203125, 39.3682791491601], [23.203125, 39.2322531417149], [23.37890625, 39.2322531417149], [23.5546875, 39.2322531417149], [23.73046875, 39.2322531417149], [23.73046875, 39.0959629363055], [23.5546875, 39.0959629363055], [23.37890625, 39.0959629363055], [23.37890625, 38.9594087924542], [23.37890625, 38.8225909761771], [23.203125, 38.8225909761771], [23.02734375, 38.8225909761771], [22.8515625, 38.8225909761771], [22.8515625, 38.685509760012], [23.02734375, 38.685509760012], [23.203125, 38.685509760012], [23.37890625, 38.685509760012], [23.37890625, 38.5481654230466], [23.5546875, 38.5481654230466], [23.5546875, 38.685509760012], [23.73046875, 38.8225909761771], [23.73046875, 38.685509760012], [23.90625, 38.685509760012], [24.08203125, 38.685509760012], [24.08203125, 38.5481654230466], [24.2578125, 38.5481654230466], [24.2578125, 38.4105582509461], [24.2578125, 38.272688535981], [24.08203125, 38.272688535981], [24.08203125, 38.1345565770541], [24.08203125, 37.9961626797281], [24.08203125, 37.857507156252], [24.08203125, 37.7185903255881], [23.90625, 37.7185903255881], [23.90625, 37.857507156252], [23.73046875, 37.857507156252], [23.73046875, 37.9961626797281]], [[24.08203125, 38.272688535981], [24.08203125, 38.4105582509461], [23.90625, 38.4105582509461], [23.73046875, 38.4105582509461], [23.73046875, 38.272688535981], [23.90625, 38.272688535981], [24.08203125, 38.272688535981]], [[23.02734375, 39.0959629363055], [23.02734375, 38.9594087924542], [23.203125, 38.9594087924542], [23.203125, 39.0959629363055], [23.02734375, 39.0959629363055]], [[23.02734375, 39.0959629363055], [23.02734375, 39.2322531417149], [22.8515625, 39.2322531417149], [22.8515625, 39.0959629363055], [23.02734375, 39.0959629363055]], [[22.67578125, 38.8225909761771], [22.67578125, 38.9594087924542], [22.5, 38.9594087924542], [22.5, 38.8225909761771], [22.67578125, 38.8225909761771]], [[23.02734375, 37.9961626797281], [23.203125, 38.1345565770541], [23.02734375, 38.272688535981], [22.8515625, 38.272688535981], [22.67578125, 38.272688535981], [22.67578125, 38.4105582509461], [22.5, 38.272688535981], [22.5, 38.4105582509461], [22.32421875, 38.4105582509461], [22.1484375, 38.4105582509461], [21.97265625, 38.4105582509461], [21.796875, 38.4105582509461], [21.796875, 38.272688535981], [21.97265625, 38.272688535981], [22.1484375, 38.272688535981], [22.1484375, 38.1345565770541], [22.32421875, 38.1345565770541], [22.5, 38.1345565770541], [22.67578125, 38.1345565770541], [22.67578125, 37.9961626797281], [22.8515625, 37.9961626797281], [23.02734375, 37.9961626797281]]], [[[25.3125, 35.0299963690257], [25.13671875, 34.8859309407531], [24.9609375, 34.8859309407531], [24.78515625, 34.8859309407531], [24.78515625, 35.0299963690257], [24.609375, 35.0299963690257], [24.609375, 35.1738083179996], [24.43359375, 35.1738083179996], [24.2578125, 35.1738083179996], [24.08203125, 35.1738083179996], [23.90625, 35.1738083179996], [23.90625, 35.3173663292379], [23.73046875, 35.3173663292379], [23.73046875, 35.1738083179996], [23.5546875, 35.1738083179996], [23.5546875, 35.3173663292379], [23.5546875, 35.4606699514953], [23.73046875, 35.4606699514953], [23.73046875, 35.6037187406973], [23.90625, 35.6037187406973], [23.90625, 35.4606699514953], [24.08203125, 35.4606699514953], [24.08203125, 35.6037187406973], [24.2578125, 35.6037187406973], [24.2578125, 35.4606699514953], [24.2578125, 35.3173663292379], [24.43359375, 35.3173663292379], [24.609375, 35.3173663292379], [24.609375, 35.4606699514953], [24.78515625, 35.4606699514953], [24.9609375, 35.4606699514953], [25.13671875, 35.4606699514953], [24.9609375, 35.3173663292379], [25.13671875, 35.3173663292379], [25.3125, 35.3173663292379], [25.48828125, 35.3173663292379], [25.6640625, 35.3173663292379], [25.6640625, 35.1738083179996], [25.83984375, 35.1738083179996], [26.015625, 35.1738083179996], [26.19140625, 35.1738083179996], [26.3671875, 35.1738083179996], [26.19140625, 35.0299963690257], [26.015625, 35.0299963690257], [25.83984375, 35.0299963690257], [25.6640625, 35.0299963690257], [25.48828125, 35.0299963690257], [25.3125, 35.0299963690257]]], [[[27.24609375, 35.6037187406973], [27.24609375, 35.4606699514953], [27.0703125, 35.4606699514953], [27.0703125, 35.6037187406973], [27.0703125, 35.7465122599185], [27.24609375, 35.7465122599185], [27.24609375, 35.6037187406973]]], [[[23.02734375, 36.1733569352216], [22.8515625, 36.1733569352216], [22.8515625, 36.3151251474805], [23.02734375, 36.3151251474805], [23.02734375, 36.1733569352216]]], [[[28.125, 36.1733569352216], [28.125, 36.0313317763319], [27.94921875, 36.0313317763319], [27.94921875, 35.8890500793609], [27.7734375, 35.8890500793609], [27.7734375, 36.0313317763319], [27.7734375, 36.1733569352216], [27.7734375, 36.3151251474805], [27.94921875, 36.3151251474805], [28.125, 36.4566360115962], [28.30078125, 36.4566360115962], [28.30078125, 36.3151251474805], [28.125, 36.3151251474805], [28.125, 36.1733569352216]]], [[[27.7734375, 36.5978891330702], [27.94921875, 36.5978891330702], [27.94921875, 36.4566360115962], [27.7734375, 36.4566360115962], [27.7734375, 36.5978891330702]]], [[[26.71875, 37.7185903255881], [26.71875, 37.857507156252], [26.89453125, 37.857507156252], [27.0703125, 37.857507156252], [27.0703125, 37.7185903255881], [26.89453125, 37.7185903255881], [26.89453125, 37.5794125134384], [26.71875, 37.5794125134384], [26.71875, 37.7185903255881]]], [[[25.13671875, 37.4399740522706], [25.3125, 37.4399740522706], [25.13671875, 37.3002752813443], [25.13671875, 37.4399740522706]]], [[[27.24609375, 36.8796206050268], [27.24609375, 36.7388841243943], [27.0703125, 36.7388841243943], [27.0703125, 36.8796206050268], [26.89453125, 36.8796206050268], [26.89453125, 37.0200982013681], [27.0703125, 37.0200982013681], [27.24609375, 37.0200982013681], [27.24609375, 36.8796206050268]]], [[[24.609375, 36.7388841243943], [24.43359375, 36.8796206050268], [24.609375, 36.8796206050268], [24.609375, 36.7388841243943]]], [[[24.609375, 37.0200982013681], [24.78515625, 37.0200982013681], [24.78515625, 36.8796206050268], [24.609375, 36.8796206050268], [24.609375, 37.0200982013681]]], [[[25.6640625, 36.7388841243943], [25.6640625, 36.8796206050268], [25.83984375, 36.7388841243943], [25.6640625, 36.7388841243943]]], [[[25.83984375, 36.3151251474805], [25.6640625, 36.3151251474805], [25.6640625, 36.4566360115962], [25.83984375, 36.4566360115962], [25.83984375, 36.3151251474805]]], [[[23.02734375, 36.5978891330702], [23.203125, 36.5978891330702], [23.203125, 36.4566360115962], [23.02734375, 36.4566360115962], [23.02734375, 36.5978891330702]]], [[[24.43359375, 36.5978891330702], [24.2578125, 36.5978891330702], [24.2578125, 36.7388841243943], [24.43359375, 36.7388841243943], [24.43359375, 36.5978891330702]]], [[[25.48828125, 37.0200982013681], [25.3125, 37.0200982013681], [25.13671875, 37.0200982013681], [25.13671875, 37.1603165467368], [25.3125, 37.1603165467368], [25.48828125, 37.1603165467368], [25.6640625, 37.1603165467368], [25.6640625, 37.0200982013681], [25.48828125, 37.0200982013681]]], [[[19.6875, 39.6395375643667], [19.6875, 39.7747694852955], [19.86328125, 39.7747694852955], [19.86328125, 39.6395375643667], [19.6875, 39.6395375643667]]], [[[25.3125, 39.9097362345372], [25.3125, 39.7747694852955], [25.13671875, 39.7747694852955], [24.9609375, 39.7747694852955], [25.13671875, 39.9097362345372], [24.9609375, 40.0444375846086], [25.13671875, 40.0444375846086], [25.3125, 40.0444375846086], [25.48828125, 40.0444375846086], [25.48828125, 39.9097362345372], [25.3125, 39.9097362345372]]], [[[24.08203125, 40.3130432088809], [24.2578125, 40.3130432088809], [24.2578125, 40.178873314347], [24.08203125, 40.3130432088809]]], [[[19.86328125, 39.5040407055842], [20.0390625, 39.5040407055842], [20.0390625, 39.3682791491601], [19.86328125, 39.3682791491601], [19.86328125, 39.5040407055842]]], [[[24.609375, 38.8225909761771], [24.43359375, 38.8225909761771], [24.43359375, 38.9594087924542], [24.609375, 38.9594087924542], [24.609375, 38.8225909761771]]], [[[26.54296875, 39.0959629363055], [26.54296875, 38.9594087924542], [26.3671875, 38.9594087924542], [26.19140625, 38.9594087924542], [26.19140625, 39.0959629363055], [26.3671875, 39.0959629363055], [26.3671875, 39.2322531417149], [26.54296875, 39.2322531417149], [26.54296875, 39.0959629363055]]], [[[26.19140625, 39.0959629363055], [26.015625, 39.0959629363055], [25.83984375, 39.0959629363055], [25.83984375, 39.2322531417149], [26.015625, 39.2322531417149], [26.015625, 39.3682791491601], [26.19140625, 39.3682791491601], [26.3671875, 39.3682791491601], [26.3671875, 39.2322531417149], [26.19140625, 39.2322531417149], [26.19140625, 39.0959629363055]]], [[[26.3671875, 37.7185903255881], [26.3671875, 37.5794125134384], [26.19140625, 37.5794125134384], [26.19140625, 37.7185903255881], [26.3671875, 37.7185903255881]]], [[[24.9609375, 37.7185903255881], [25.13671875, 37.7185903255881], [25.13671875, 37.5794125134384], [24.9609375, 37.5794125134384], [24.9609375, 37.7185903255881]]], [[[24.2578125, 37.5794125134384], [24.2578125, 37.7185903255881], [24.43359375, 37.7185903255881], [24.43359375, 37.5794125134384], [24.2578125, 37.5794125134384]]], [[[20.7421875, 37.857507156252], [20.91796875, 37.857507156252], [20.91796875, 37.7185903255881], [20.91796875, 37.5794125134384], [20.7421875, 37.5794125134384], [20.7421875, 37.7185903255881], [20.7421875, 37.857507156252]]], [[[24.78515625, 37.857507156252], [24.9609375, 37.857507156252], [24.9609375, 37.7185903255881], [24.78515625, 37.7185903255881], [24.78515625, 37.857507156252]]], [[[26.015625, 38.272688535981], [26.015625, 38.1345565770541], [25.83984375, 38.1345565770541], [25.83984375, 38.272688535981], [26.015625, 38.272688535981]]], [[[20.7421875, 38.272688535981], [20.7421875, 38.1345565770541], [20.56640625, 38.1345565770541], [20.390625, 38.1345565770541], [20.390625, 38.272688535981], [20.56640625, 38.272688535981], [20.56640625, 38.4105582509461], [20.56640625, 38.5481654230466], [20.56640625, 38.685509760012], [20.56640625, 38.8225909761771], [20.7421875, 38.8225909761771], [20.7421875, 38.685509760012], [20.7421875, 38.5481654230466], [20.7421875, 38.4105582509461], [20.7421875, 38.272688535981]]], [[[24.78515625, 37.9961626797281], [24.78515625, 37.857507156252], [24.609375, 37.857507156252], [24.609375, 37.9961626797281], [24.78515625, 37.9961626797281]]], [[[23.5546875, 37.857507156252], [23.37890625, 37.857507156252], [23.37890625, 37.9961626797281], [23.5546875, 37.857507156252]]], [[[23.37890625, 38.8225909761771], [23.5546875, 38.8225909761771], [23.5546875, 38.685509760012], [23.37890625, 38.685509760012], [23.37890625, 38.8225909761771]]], [[[24.2578125, 38.1345565770541], [24.43359375, 38.1345565770541], [24.609375, 38.1345565770541], [24.609375, 37.9961626797281], [24.43359375, 37.9961626797281], [24.2578125, 37.9961626797281], [24.2578125, 38.1345565770541]]], [[[26.015625, 38.5481654230466], [26.19140625, 38.5481654230466], [26.19140625, 38.4105582509461], [26.19140625, 38.272688535981], [26.015625, 38.272688535981], [26.015625, 38.4105582509461], [25.83984375, 38.4105582509461], [25.83984375, 38.5481654230466], [26.015625, 38.5481654230466]]]]}",
          "{\"type\": \"MultiPolygon\", \"coordinates\": [[[[36.5625, 36.3151251474805], [36.73828125, 36.3151251474805], [36.73828125, 36.1733569352216], [36.5625, 36.1733569352216], [36.38671875, 36.1733569352216], [36.38671875, 36.0313317763319], [36.2109375, 36.0313317763319], [36.2109375, 35.8890500793609], [36.03515625, 35.8890500793609], [35.859375, 35.8890500793609], [35.859375, 36.0313317763319], [35.859375, 36.1733569352216], [35.859375, 36.3151251474805], [35.859375, 36.4566360115962], [36.03515625, 36.4566360115962], [36.03515625, 36.5978891330702], [36.2109375, 36.5978891330702], [36.2109375, 36.7388841243943], [36.2109375, 36.8796206050268], [36.03515625, 36.8796206050268], [35.859375, 36.8796206050268], [35.859375, 36.7388841243943], [35.68359375, 36.7388841243943], [35.68359375, 36.5978891330702], [35.5078125, 36.5978891330702], [35.33203125, 36.5978891330702], [35.15625, 36.5978891330702], [35.15625, 36.7388841243943], [34.98046875, 36.7388841243943], [34.8046875, 36.7388841243943], [34.8046875, 36.8796206050268], [34.62890625, 36.7388841243943], [34.453125, 36.7388841243943], [34.453125, 36.5978891330702], [34.27734375, 36.5978891330702], [34.27734375, 36.4566360115962], [34.1015625, 36.4566360115962], [34.1015625, 36.3151251474805], [33.92578125, 36.3151251474805], [33.75, 36.3151251474805], [33.75, 36.1733569352216], [33.57421875, 36.1733569352216], [33.3984375, 36.1733569352216], [33.22265625, 36.1733569352216], [33.046875, 36.1733569352216], [33.046875, 36.0313317763319], [32.87109375, 36.1733569352216], [32.87109375, 36.0313317763319], [32.6953125, 36.0313317763319], [32.51953125, 36.0313317763319], [32.51953125, 36.1733569352216], [32.34375, 36.1733569352216], [32.34375, 36.3151251474805], [32.16796875, 36.3151251474805], [32.16796875, 36.4566360115962], [31.9921875, 36.4566360115962], [31.9921875, 36.5978891330702], [31.81640625, 36.5978891330702], [31.640625, 36.5978891330702], [31.640625, 36.7388841243943], [31.46484375, 36.7388841243943], [31.2890625, 36.7388841243943], [31.2890625, 36.8796206050268], [31.11328125, 36.8796206050268], [30.9375, 36.8796206050268], [30.76171875, 36.8796206050268], [30.5859375, 36.8796206050268], [30.5859375, 36.7388841243943], [30.5859375, 36.5978891330702], [30.5859375, 36.4566360115962], [30.41015625, 36.4566360115962], [30.41015625, 36.3151251474805], [30.234375, 36.3151251474805], [30.05859375, 36.3151251474805], [30.05859375, 36.1733569352216], [29.8828125, 36.1733569352216], [29.70703125, 36.1733569352216], [29.53125, 36.1733569352216], [29.35546875, 36.1733569352216], [29.35546875, 36.3151251474805], [29.1796875, 36.3151251474805], [29.1796875, 36.4566360115962], [29.1796875, 36.5978891330702], [29.00390625, 36.5978891330702], [28.828125, 36.7388841243943], [28.65234375, 36.7388841243943], [28.65234375, 36.8796206050268], [28.4765625, 36.8796206050268], [28.4765625, 36.7388841243943], [28.30078125, 36.7388841243943], [28.125, 36.7388841243943], [28.125, 36.5978891330702], [27.94921875, 36.5978891330702], [27.94921875, 36.7388841243943], [27.94921875, 36.8796206050268], [28.125, 36.8796206050268], [28.125, 37.0200982013681], [27.94921875, 37.0200982013681], [27.7734375, 37.0200982013681], [27.59765625, 37.0200982013681], [27.421875, 37.0200982013681], [27.24609375, 37.0200982013681], [27.24609375, 37.1603165467368], [27.421875, 37.1603165467368], [27.421875, 37.3002752813443], [27.421875, 37.4399740522706], [27.24609375, 37.4399740522706], [27.24609375, 37.5794125134384], [27.0703125, 37.5794125134384], [27.0703125, 37.7185903255881], [27.24609375, 37.7185903255881], [27.24609375, 37.857507156252], [27.24609375, 37.9961626797281], [27.0703125, 37.9961626797281], [26.89453125, 38.1345565770541], [26.71875, 38.1345565770541], [26.54296875, 38.1345565770541], [26.54296875, 38.272688535981], [26.3671875, 38.1345565770541], [26.3671875, 38.272688535981], [26.3671875, 38.4105582509461], [26.3671875, 38.5481654230466], [26.3671875, 38.685509760012], [26.54296875, 38.685509760012], [26.54296875, 38.5481654230466], [26.71875, 38.5481654230466], [26.71875, 38.685509760012], [26.89453125, 38.685509760012], [26.89453125, 38.8225909761771], [27.0703125, 38.8225909761771], [27.0703125, 38.9594087924542], [26.89453125, 38.9594087924542], [26.71875, 38.9594087924542], [26.71875, 39.0959629363055], [26.71875, 39.2322531417149], [26.54296875, 39.2322531417149], [26.54296875, 39.3682791491601], [26.71875, 39.3682791491601], [26.89453125, 39.3682791491601], [26.89453125, 39.5040407055842], [26.71875, 39.5040407055842], [26.54296875, 39.5040407055842], [26.3671875, 39.5040407055842], [26.19140625, 39.5040407055842], [26.015625, 39.5040407055842], [26.19140625, 39.6395375643667], [26.19140625, 39.7747694852955], [26.19140625, 39.9097362345372], [26.19140625, 40.0444375846086], [26.19140625, 40.178873314347], [26.3671875, 40.178873314347], [26.19140625, 40.3130432088809], [26.3671875, 40.3130432088809], [26.3671875, 40.4469470596005], [26.54296875, 40.4469470596005], [26.71875, 40.4469470596005], [26.71875, 40.5805846641276], [26.54296875, 40.5805846641276], [26.3671875, 40.5805846641276], [26.19140625, 40.5805846641276], [26.015625, 40.5805846641276], [26.015625, 40.713955826286], [26.19140625, 40.713955826286], [26.19140625, 40.8470603560712], [26.3671875, 40.8470603560712], [26.3671875, 40.9798980696201], [26.3671875, 41.1124687891809], [26.3671875, 41.2447723430821], [26.54296875, 41.2447723430821], [26.54296875, 41.3768085657023], [26.54296875, 41.5085772974393], [26.54296875, 41.6400783846789], [26.3671875, 41.6400783846789], [26.3671875, 41.7713116797641], [26.54296875, 41.7713116797641], [26.54296875, 41.9022770409637], [26.54296875, 42.0329743324414], [26.71875, 42.0329743324414], [26.89453125, 42.0329743324414], [27.0703125, 42.0329743324414], [27.24609375, 42.0329743324414], [27.421875, 42.0329743324414], [27.421875, 41.9022770409637], [27.59765625, 41.9022770409637], [27.59765625, 42.0329743324414], [27.7734375, 42.0329743324414], [27.94921875, 42.0329743324414], [28.125, 41.9022770409637], [27.94921875, 41.9022770409637], [27.94921875, 41.7713116797641], [28.125, 41.7713116797641], [28.125, 41.6400783846789], [28.125, 41.5085772974393], [28.30078125, 41.5085772974393], [28.4765625, 41.3768085657023], [28.65234375, 41.3768085657023], [28.828125, 41.3768085657023], [28.828125, 41.2447723430821], [29.00390625, 41.2447723430821], [29.1796875, 41.2447723430821], [29.35546875, 41.2447723430821], [29.53125, 41.1124687891809], [29.70703125, 41.2447723430821], [29.70703125, 41.1124687891809], [29.8828125, 41.1124687891809], [30.05859375, 41.1124687891809], [30.234375, 41.1124687891809], [30.234375, 41.2447723430821], [30.41015625, 41.2447723430821], [30.41015625, 41.1124687891809], [30.5859375, 41.1124687891809], [30.76171875, 41.1124687891809], [30.9375, 41.1124687891809], [31.11328125, 41.1124687891809], [31.2890625, 41.1124687891809], [31.46484375, 41.2447723430821], [31.46484375, 41.3768085657023], [31.640625, 41.3768085657023], [31.81640625, 41.3768085657023], [31.81640625, 41.5085772974393], [31.9921875, 41.5085772974393], [32.16796875, 41.6400783846789], [32.34375, 41.7713116797641], [32.51953125, 41.7713116797641], [32.6953125, 41.7713116797641], [32.6953125, 41.9022770409637], [32.87109375, 41.9022770409637], [33.046875, 41.9022770409637], [33.22265625, 41.9022770409637], [33.22265625, 42.0329743324414], [33.3984375, 42.0329743324414], [33.57421875, 42.0329743324414], [33.75, 42.0329743324414], [33.92578125, 42.0329743324414], [34.1015625, 42.0329743324414], [34.1015625, 41.9022770409637], [34.27734375, 41.9022770409637], [34.453125, 41.9022770409637], [34.62890625, 41.9022770409637], [34.8046875, 41.9022770409637], [34.8046875, 42.0329743324414], [34.98046875, 42.0329743324414], [35.15625, 42.0329743324414], [35.15625, 41.9022770409637], [35.15625, 41.7713116797641], [35.33203125, 41.7713116797641], [35.33203125, 41.6400783846789], [35.5078125, 41.6400783846789], [35.68359375, 41.6400783846789], [35.859375, 41.6400783846789], [36.03515625, 41.7713116797641], [36.03515625, 41.6400783846789], [36.2109375, 41.5085772974393], [36.2109375, 41.3768085657023], [36.38671875, 41.3768085657023], [36.38671875, 41.2447723430821], [36.5625, 41.2447723430821], [36.5625, 41.3768085657023], [36.73828125, 41.3768085657023], [36.9140625, 41.3768085657023], [36.9140625, 41.2447723430821], [37.08984375, 41.2447723430821], [37.08984375, 41.1124687891809], [37.265625, 41.1124687891809], [37.44140625, 41.1124687891809], [37.44140625, 40.9798980696201], [37.6171875, 40.9798980696201], [37.6171875, 41.1124687891809], [37.79296875, 41.1124687891809], [37.79296875, 40.9798980696201], [37.96875, 40.9798980696201], [38.14453125, 40.9798980696201], [38.3203125, 40.9798980696201], [38.49609375, 40.9798980696201], [38.671875, 40.9798980696201], [38.84765625, 40.9798980696201], [39.0234375, 40.9798980696201], [39.19921875, 41.1124687891809], [39.375, 41.1124687891809], [39.55078125, 41.1124687891809], [39.55078125, 40.9798980696201], [39.7265625, 40.9798980696201], [39.90234375, 40.9798980696201], [40.078125, 40.9798980696201], [40.078125, 40.8470603560712], [40.25390625, 40.9798980696201], [40.4296875, 40.9798980696201], [40.60546875, 40.9798980696201], [40.60546875, 41.1124687891809], [40.78125, 41.1124687891809], [40.95703125, 41.2447723430821], [41.1328125, 41.2447723430821], [41.30859375, 41.3768085657023], [41.484375, 41.3768085657023], [41.484375, 41.5085772974393], [41.66015625, 41.5085772974393], [41.8359375, 41.5085772974393], [42.01171875, 41.5085772974393], [42.1875, 41.5085772974393], [42.36328125, 41.5085772974393], [42.36328125, 41.3768085657023], [42.5390625, 41.3768085657023], [42.5390625, 41.5085772974393], [42.5390625, 41.6400783846789], [42.71484375, 41.6400783846789], [42.890625, 41.6400783846789], [42.890625, 41.5085772974393], [42.890625, 41.3768085657023], [43.06640625, 41.3768085657023], [43.2421875, 41.3768085657023], [43.2421875, 41.2447723430821], [43.41796875, 41.2447723430821], [43.41796875, 41.1124687891809], [43.41796875, 40.9798980696201], [43.59375, 40.9798980696201], [43.59375, 40.8470603560712], [43.76953125, 40.8470603560712], [43.76953125, 40.713955826286], [43.76953125, 40.5805846641276], [43.59375, 40.5805846641276], [43.59375, 40.4469470596005], [43.59375, 40.3130432088809], [43.59375, 40.178873314347], [43.59375, 40.0444375846086], [43.76953125, 40.0444375846086], [43.9453125, 40.0444375846086], [44.12109375, 40.0444375846086], [44.296875, 40.0444375846086], [44.47265625, 40.0444375846086], [44.47265625, 39.9097362345372], [44.6484375, 39.9097362345372], [44.6484375, 39.7747694852955], [44.47265625, 39.7747694852955], [44.47265625, 39.6395375643667], [44.47265625, 39.5040407055842], [44.47265625, 39.3682791491601], [44.296875, 39.3682791491601], [44.12109375, 39.3682791491601], [44.12109375, 39.2322531417149], [44.12109375, 39.0959629363055], [44.12109375, 38.9594087924542], [44.296875, 38.9594087924542], [44.296875, 38.8225909761771], [44.296875, 38.685509760012], [44.296875, 38.5481654230466], [44.296875, 38.4105582509461], [44.47265625, 38.4105582509461], [44.47265625, 38.272688535981], [44.47265625, 38.1345565770541], [44.296875, 38.1345565770541], [44.296875, 37.9961626797281], [44.296875, 37.857507156252], [44.47265625, 37.857507156252], [44.47265625, 37.7185903255881], [44.6484375, 37.7185903255881], [44.6484375, 37.5794125134384], [44.6484375, 37.4399740522706], [44.6484375, 37.3002752813443], [44.82421875, 37.3002752813443], [44.82421875, 37.1603165467368], [44.6484375, 37.1603165467368], [44.47265625, 37.1603165467368], [44.47265625, 37.0200982013681], [44.296875, 37.0200982013681], [44.12109375, 37.0200982013681], [44.12109375, 37.1603165467368], [44.296875, 37.1603165467368], [44.296875, 37.3002752813443], [44.12109375, 37.3002752813443], [43.9453125, 37.3002752813443], [43.9453125, 37.1603165467368], [43.76953125, 37.1603165467368], [43.76953125, 37.3002752813443], [43.59375, 37.1603165467368], [43.59375, 37.3002752813443], [43.41796875, 37.3002752813443], [43.2421875, 37.3002752813443], [43.06640625, 37.3002752813443], [42.890625, 37.3002752813443], [42.890625, 37.4399740522706], [42.71484375, 37.4399740522706], [42.71484375, 37.3002752813443], [42.71484375, 37.1603165467368], [42.5390625, 37.1603165467368], [42.36328125, 37.1603165467368], [42.36328125, 37.3002752813443], [42.1875, 37.3002752813443], [42.1875, 37.1603165467368], [42.01171875, 37.1603165467368], [41.8359375, 37.1603165467368], [41.66015625, 37.1603165467368], [41.484375, 37.1603165467368], [41.484375, 37.0200982013681], [41.30859375, 37.0200982013681], [41.1328125, 37.0200982013681], [41.1328125, 37.1603165467368], [40.95703125, 37.1603165467368], [40.78125, 37.1603165467368], [40.60546875, 37.1603165467368], [40.60546875, 37.0200982013681], [40.4296875, 37.0200982013681], [40.25390625, 37.0200982013681], [40.25390625, 36.8796206050268], [40.078125, 36.8796206050268], [39.90234375, 36.8796206050268], [39.90234375, 36.7388841243943], [39.7265625, 36.7388841243943], [39.55078125, 36.7388841243943], [39.375, 36.7388841243943], [39.19921875, 36.7388841243943], [39.0234375, 36.7388841243943], [38.84765625, 36.7388841243943], [38.671875, 36.7388841243943], [38.671875, 36.8796206050268], [38.49609375, 36.8796206050268], [38.3203125, 36.8796206050268], [38.14453125, 36.8796206050268], [37.96875, 36.8796206050268], [37.96875, 36.7388841243943], [37.79296875, 36.7388841243943], [37.6171875, 36.7388841243943], [37.44140625, 36.7388841243943], [37.44140625, 36.5978891330702], [37.265625, 36.5978891330702], [37.08984375, 36.5978891330702], [37.08984375, 36.7388841243943], [36.9140625, 36.7388841243943], [36.73828125, 36.7388841243943], [36.5625, 36.7388841243943], [36.5625, 36.5978891330702], [36.5625, 36.4566360115962], [36.5625, 36.3151251474805]], [[26.71875, 38.5481654230466], [26.71875, 38.4105582509461], [26.89453125, 38.4105582509461], [26.89453125, 38.5481654230466], [26.71875, 38.5481654230466]], [[26.3671875, 40.178873314347], [26.54296875, 40.178873314347], [26.54296875, 40.3130432088809], [26.3671875, 40.178873314347]], [[26.71875, 40.5805846641276], [26.89453125, 40.5805846641276], [26.89453125, 40.713955826286], [26.71875, 40.713955826286], [26.71875, 40.5805846641276]], [[26.89453125, 40.5805846641276], [26.89453125, 40.4469470596005], [27.0703125, 40.4469470596005], [27.24609375, 40.4469470596005], [27.24609375, 40.3130432088809], [27.421875, 40.3130432088809], [27.59765625, 40.3130432088809], [27.7734375, 40.3130432088809], [27.94921875, 40.3130432088809], [28.125, 40.3130432088809], [28.125, 40.4469470596005], [28.30078125, 40.4469470596005], [28.4765625, 40.4469470596005], [28.65234375, 40.3130432088809], [28.65234375, 40.4469470596005], [28.828125, 40.4469470596005], [28.828125, 40.5805846641276], [29.00390625, 40.5805846641276], [29.1796875, 40.5805846641276], [29.1796875, 40.713955826286], [29.35546875, 40.713955826286], [29.35546875, 40.8470603560712], [29.1796875, 40.8470603560712], [29.1796875, 40.9798980696201], [29.00390625, 40.9798980696201], [28.828125, 40.9798980696201], [28.65234375, 40.9798980696201], [28.4765625, 40.9798980696201], [28.30078125, 41.1124687891809], [28.125, 41.1124687891809], [28.125, 40.9798980696201], [27.94921875, 40.9798980696201], [27.7734375, 40.9798980696201], [27.59765625, 40.9798980696201], [27.421875, 40.9798980696201], [27.421875, 40.8470603560712], [27.421875, 40.713955826286], [27.24609375, 40.713955826286], [27.24609375, 40.5805846641276], [27.0703125, 40.5805846641276], [26.89453125, 40.5805846641276]], [[28.828125, 40.4469470596005], [29.00390625, 40.3130432088809], [29.00390625, 40.4469470596005], [28.828125, 40.4469470596005]], [[29.53125, 40.713955826286], [29.70703125, 40.713955826286], [29.53125, 40.8470603560712], [29.53125, 40.713955826286]]], [[[44.6484375, 39.7747694852955], [44.82421875, 39.7747694852955], [44.82421875, 39.6395375643667], [44.6484375, 39.6395375643667], [44.6484375, 39.7747694852955]]], [[[25.6640625, 40.178873314347], [25.83984375, 40.178873314347], [26.015625, 40.178873314347], [25.83984375, 40.0444375846086], [25.6640625, 40.0444375846086], [25.6640625, 40.178873314347]]], [[[27.94921875, 40.4469470596005], [27.7734375, 40.4469470596005], [27.59765625, 40.4469470596005], [27.421875, 40.4469470596005], [27.421875, 40.5805846641276], [27.59765625, 40.5805846641276], [27.59765625, 40.713955826286], [27.7734375, 40.713955826286], [27.7734375, 40.5805846641276], [27.94921875, 40.5805846641276], [27.94921875, 40.4469470596005]]]]}"
        ]
      },
      "mapping": {
        "fill": "country"
      },
      "data_meta": {
        "geodataframe": {
          "geometry": "geometry"
        }
      },
      "alpha": 0.2
    },
    {
      "geom": "point",
      "data": {
        "IATA": [
          "ATH",
          "HER",
          "SKG",
          "RHO",
          "CFU",
          "CHQ",
          "KGS",
          "JTR",
          "ZTH",
          "JMK",
          "ISL",
          "SAW",
          "AYT",
          "ADB",
          "ESB"
        ],
        "city": [
          "Athens",
          "Heraklion",
          "Thessaloniki",
          "Rhodes",
          "Corfu",
          "Chania",
          "Kos",
          "Santorini",
          "Zakinthos",
          "Mikonos",
          "Istanbul",
          "Istanbul",
          "Antalya",
          "Izmir",
          "Ankara"
        ],
        "latitude": [
          37.9354,
          35.34,
          40.523,
          36.4041,
          39.6067,
          35.5335,
          36.8,
          36.3987,
          37.753,
          37.4342,
          40.983,
          40.9053,
          36.9032,
          38.2932,
          40.1243
        ],
        "longitude": [
          23.9437,
          25.1753,
          22.9767,
          28.0898,
          19.9133,
          24.1499,
          27.089,
          25.4793,
          20.885,
          25.3484,
          28.8104,
          29.3172,
          30.8008,
          27.1516,
          32.9918
        ],
        "passengers": [
          24.13,
          8.0,
          6.67,
          5.57,
          3.36,
          3.0,
          2.67,
          2.26,
          1.8,
          1.4,
          67.98,
          34.13,
          31.7,
          13.41,
          16.74
        ],
        "country": [
          "GR",
          "GR",
          "GR",
          "GR",
          "GR",
          "GR",
          "GR",
          "GR",
          "GR",
          "GR",
          "TR",
          "TR",
          "TR",
          "TR",
          "TR"
        ]
      },
      "mapping": {
        "x": "longitude",
        "y": "latitude",
        "fill": "country",
        "size": "passengers"
      },
      "tooltips": {
        "tooltip_formats": [
          {
            "field": "passengers",
            "format": "{.1f} m"
          },
          {
            "field": "^x",
            "format": ".2f"
          },
          {
            "field": "^y",
            "format": ".2f"
          }
        ],
        "tooltip_lines": [
          "@|@IATA",
          "Passengers|@passengers",
          "City|@city",
          "Country|@country",
          "Longitude|^x",
          "Latitude|^y"
        ]
      },
      "data_meta": {},
      "shape": 21,
      "alpha": 0.7,
      "color": "white"
    }
  ]
}

        """.trimMargin()

        return parsePlotSpec(spec)
    }

    private fun georeference() : MutableMap<String, Any> {
        val spec = """
            |{
            |  "kind": "plot",
            |  "layers": [
            |    {
            |      "geom": "livemap",
            |      "tiles": {
            |        "kind": "vector_lets_plot",
            |        "url": "wss://tiles.datalore.jetbrains.com",
            |        "theme": "color",
            |        "attribution": "Map: <a href=\"https://github.com/JetBrains/lets-plot\">\u00a9 Lets-Plot</a>, map data: <a href=\"https://www.openstreetmap.org/copyright\">\u00a9 OpenStreetMap contributors</a>."
            |      },
            |      "geocoding": {
            |        "url": "http://10.0.0.127:3020/map_data/geocoding"
            |      }
            |    },
            |    {
            |      "geom": "polygon",
            |      "map": {
            |        "id": ["148838", "1428125"],
            |        "country": ["usa", "canada"],
            |        "found name": ["United States", "Canada"],
            |        "centroid": [[-99.7426055742426, 37.2502586245537], [-110.450525298983, 56.8387750536203]],
            |        "position": [
            |          [-124.733375608921, 25.1162923872471, -66.9498561322689, 49.3844716250896],
            |          [-141.002660393715, 41.6765552759171, -55.6205673515797, 72.0015004277229]
            |        ],
            |        "limit": [
            |          [144.618412256241, -14.3740922212601, -64.564847946167, 71.3878083229065],
            |          [-141.002660393715, 41.6765552759171, -52.6194141805172, 83.1445701420307]
            |        ]
            |      },
            |      "fill": "orange",
            |      "map_data_meta": {
            |        "georeference": {}
            |      }
            |    }
            |  ]
            |}
            |""".trimMargin()

        return parsePlotSpec(spec)
    }


    private fun blankPoint(): MutableMap<String, Any> {
        val spec = """{
            "kind": "plot",
            "layers": [
            {
            "geom": "point",
            "data": {},
            "mapping": {}
            }
            ]
            }""".trimIndent()

        return parsePlotSpec(spec)
    }

    private fun pieWithNullValuesInData(): MutableMap<String, Any> {
        val spec = """
            {
              "kind": "plot",
              "layers": [
                {
                  "geom": "livemap",
                  "data": {
                    "States": [
                      "Alabama", "Alabama", "Alabama", 
                      "Alaska", "Alaska", "Alaska",
                      "Arizona", "Arizona", "Arizona",
                      "Arkansas", "Arkansas", "Arkansas"
                    ],
                    "Item": [
                      "State Debt", "Local Debt", "Gross State Product",
                      "State Debt", "Local Debt", "Gross State Product",
                      "State Debt", "Local Debt", "Gross State Product",
                      "State Debt", "Local Debt", "Gross State Product"
                    ],
                    "Values": [
                      10.7, 26.1, 228.0,
                      5.9, 3.5, 55.7,
                      34.9, 23.5, 355.7,
                      13.3, 30.5, 361.1
                    ]
                  },
                  "mapping": {
                    "sym_y": "Values",
                    "fill": "Item"
                  },
                  "map_data_meta": {
                    "geodataframe": {
                      "geometry": "geometry"
                    }
                  },
                  "map": {
                    "request": ["Alabama", "California", "Alaska", "Arizona", "Nevada"],
                    "found name": ["Alabama", "California", "Alaska", "Arizona", "Nevada"],
                    "geometry": [
                      "{\"type\": \"Point\", \"coordinates\": [-86.7421099329499, 32.6446247845888]}",
                      "{\"type\": \"Point\", \"coordinates\": [-119.994112927034, 37.277335524559]}",
                      "{\"type\": \"Point\", \"coordinates\": [-152.012666774028, 63.0759818851948]}",
                      "{\"type\": \"Point\", \"coordinates\": [-111.665190827228, 34.1682100296021]}",
                      "{\"type\": \"Point\", \"coordinates\": [-116.666956541192, 38.5030842572451]}"
                    ]
                  },
                  "map_join": [
                    ["States"],
                    ["request"]
                  ],
                  "display_mode": "pie",
                  "tiles": {
                    "kind": "vector_lets_plot",
                    "url": "wss://tiles.datalore.jetbrains.com",
                    "theme": "color",
                    "attribution": "Map: <a href=\"https://github.com/JetBrains/lets-plot\">\u00a9 Lets-Plot</a>, map data: <a href=\"https://www.openstreetmap.org/copyright\">\u00a9 OpenStreetMap contributors</a>."
                  },
                  "geocoding": {
                    "url": "http://172.31.52.145:3025"
                  },
                  "map_join": ["States", "state"]
                }
              ]
            }
        """.trimIndent()

        return parsePlotSpec(spec)
    }

    private fun blankMap(): MutableMap<String, Any> {
        val spec = """{
  "kind": "plot",
  "layers": [
    {
      "geom": "livemap",
      "data": {},
      "mapping": {},
      "tiles": {
        "kind": "vector_lets_plot",
        "url": "wss://tiles.datalore.jetbrains.com",
        "url": "wss://tiles.datalore.jetbrains.com",
        "theme": null,
        "attribution": "Map: <a href=\"https://github.com/JetBrains/lets-plot\">\u00a9 Lets-Plot</a>, map data: <a href=\"https://www.openstreetmap.org/copyright\">\u00a9 OpenStreetMap contributors</a>."
      },
      "geocoding": {
        "url": "http://localhost:3020"
      }
    }
  ]
}""".trimIndent()

        return parsePlotSpec(spec)
    }

    private fun barWithNanValuesInData(): MutableMap<String, Any> {
        val spec = """{
  "kind": "plot",
  "layers": [
    {
      "geom": "livemap",
      "data": {
        "x": [0, 0, 0, 10, 10, 10, 20, 20, 20],
        "y": [0, 0, 0, 10, 10, 10, 20, 20, 20],
        "z": [100, 200, 400, 144, null, 230, 123, 543, -231],
        "c": ['A', 'B', 'C', 'A', 'B', 'C', 'A', 'B', 'C']
      },
      "mapping": {
        "x": "x",
        "y": "y",
        "sym_y": "z",
        "fill": "c"
      },
      "display_mode": "bar",
      "tiles": {
        "kind": "vector_lets_plot",
        "url": "wss://tiles.datalore.jetbrains.com",
        "url": "wss://tiles.datalore.jetbrains.com",
        "theme": null,
        "attribution": "Map: <a href=\"https://github.com/JetBrains/lets-plot\">\u00a9 Lets-Plot</a>, map data: <a href=\"https://www.openstreetmap.org/copyright\">\u00a9 OpenStreetMap contributors</a>."
      },
      "geocoding": {
        "url": "http://localhost:3020"
      }
    }
  ]
}""".trimIndent()

        return parsePlotSpec(spec)
    }
    private fun pieWithNanValuesInData(): MutableMap<String, Any> {
        val spec = """{
  "kind": "plot",
  "layers": [
    {
      "geom": "livemap",
      "data": {
        "x": [0, 0, 0, 10, 10, 10, 20, 20, 20],
        "y": [0, 0, 0, 10, 10, 10, 20, 20, 20],
        "z": [100, 200, 400, 144, null, 230, 123, 543, -231],
        "c": ['A', 'B', 'C', 'A', 'B', 'C', 'A', 'B', 'C']
      },
      "mapping": {
        "x": "x",
        "y": "y",
        "sym_y": "z",
        "fill": "c"
      },
      "display_mode": "pie",
      "tiles": {
        "kind": "vector_lets_plot",
        "url": "wss://tiles.datalore.jetbrains.com",
        "url": "wss://tiles.datalore.jetbrains.com",
        "theme": null,
        "attribution": "Map: <a href=\"https://github.com/JetBrains/lets-plot\">\u00a9 Lets-Plot</a>, map data: <a href=\"https://www.openstreetmap.org/copyright\">\u00a9 OpenStreetMap contributors</a>."
      },
      "geocoding": {
        "url": "http://localhost:3020"
      }
    }
  ]
}""".trimIndent()

        return parsePlotSpec(spec)
    }

    private fun barWithNullValuesInData(): MutableMap<String, Any> {
        val spec = """
            {
              "kind": "plot",
              "layers": [
                {
                  "geom": "livemap",
                  "data": {
                    "States": [
                      "Alabama", "Alabama", "Alabama",
                      "Alaska", "Alaska", "Alaska",
                      "Arizona", "Arizona", "Arizona",
                      "Arkansas", "Arkansas", "Arkansas"
                    ],
                    "Item": [
                      "State Debt", "Local Debt", "Gross State Product",
                      "State Debt", "Local Debt", "Gross State Product",
                      "State Debt", "Local Debt", "Gross State Product",
                      "State Debt", "Local Debt", "Gross State Product"
                    ],
                    "Values": [
                      10.7, 26.1, 228.0,
                      5.9, 3.5, 55.7,
                      34.9, 23.5, 355.7,
                      13.3, 30.5, 361.1
                    ]
                  },
                  "mapping": {
                    "sym_y": "Values",
                    "fill": "Item"
                  },
                  "map_data_meta": {
                    "geodataframe": {
                      "geometry": "geometry"
                    }
                  },
                  "map": {
                    "request": ["Alabama", "California", "Alaska", "Arizona", "Nevada"],
                    "found name": ["Alabama", "California", "Alaska", "Arizona", "Nevada"],
                    "geometry": [
                      "{\"type\": \"Point\", \"coordinates\": [-86.7421099329499, 32.6446247845888]}",
                      "{\"type\": \"Point\", \"coordinates\": [-119.994112927034, 37.277335524559]}",
                      "{\"type\": \"Point\", \"coordinates\": [-152.012666774028, 63.0759818851948]}",
                      "{\"type\": \"Point\", \"coordinates\": [-111.665190827228, 34.1682100296021]}",
                      "{\"type\": \"Point\", \"coordinates\": [-116.666956541192, 38.5030842572451]}"
                    ]
                  },
                  "map_join": [
                    ["States"],
                    ["request"]
                  ],
                  "display_mode": "bar",
                  "tiles": {
                    "kind": "vector_lets_plot",
                    "url": "wss://tiles.datalore.jetbrains.com",
                    "theme": "color",
                    "attribution": "Map: <a href=\"https://github.com/JetBrains/lets-plot\">\u00a9 Lets-Plot</a>, map data: <a href=\"https://www.openstreetmap.org/copyright\">\u00a9 OpenStreetMap contributors</a>."
                  },
                  "geocoding": {
                    "url": "http://172.31.52.145:3025"
                  },
                  "map_join": ["States", "state"]
                }
              ]
            }
        """.trimIndent()

        return parsePlotSpec(spec)
    }

    private fun multiLayerTooltips(): MutableMap<String, Any> {
        val n = 10
        val rnd = Random(0)
        val data = """
            {
                "x": [${(0..n).map { rnd.nextDouble(-2.0, 2.0) }.joinToString()}],
                "y": [${(0..n).map { rnd.nextDouble(-2.0, 2.0) }.joinToString()}],
                "v": [${(0..n).map { rnd.nextDouble(0.0, 200_000.0) }.joinToString()}],
                "age": [${(0..n).map { rnd.nextInt(0, 70) }.joinToString()}]
            }
        """.trimIndent()

        val poly = """
            {
                "x": [-5.0, 5.0, 5.0, -5.0, -5.0],
                "y": [5.0, 5.0, -5.0, -5.0, 5.0]
            }
        """.trimIndent()

        val spec = """{
            "data": $data,
            "kind": "plot",
            "layers": [
                {
                    "geom": "livemap",
                    "tiles": {
                        "kind": "vector_lets_plot",
                        "url": "wss://tiles.datalore.jetbrains.com",
                        "theme": "dark",
                        "attribution": "Map data <a href=\"https://www.openstreetmap.org/copyright\">\u00a9 OpenStreetMap</a> contributors"
                    }
                },
                {
                    "geom": "polygon",
                    "data": $poly,
                    "mapping": { "x": "x", "y": "y" },
                    "fill": "#F8F4F0", 
                    "color": "#B71234",
                    "alpha": 0.5
                },
                {
                    "geom": "point",
                    "data": $data,
                    "mapping": { "x": "x", "y": "y", "size": "v", "color": "age" }
                }
            ]
        },
        """.trimIndent()

        return parsePlotSpec(spec)
    }

    private fun mapJoinBar(): MutableMap<String, Any> {
        val spec = """{
  "data": {
    "State": ["Alabama", "Alabama", "Alabama", "Alaska", "Alaska", "Alaska", "Arizona", "Arizona", "Arizona"],
    "Item": [ "State Debt", "Local Debt", "Gross State Product", "State Debt", "Local Debt", "Gross State Product", "State Debt", "Local Debt", "Gross State Product"],
    "$ B": [ 10.7, 26.1, 228.0, 5.9, 3.5, 55.7, 13.3, 30.5, 361.1]
  },
  "kind": "plot",
  "layers": [
    {
      "geom": "livemap",
      "mapping": {
        "sym_x": "Item",
        "sym_y": "$ B",
        "fill": "Item"
      },
      "map_data_meta": {
        "geodataframe": {
          "geometry": "geometry"
        }
      },
      "display_mode": "pie",
      "tiles": {
        "kind": "raster_zxy",
        "url": "https://[abc].tile.openstreetmap.org/{z}/{x}/{y}.png",
        "attribution": "<a href=\"https://www.openstreetmap.org/copyright\">© OpenStreetMap contributors</a>"
      },
      "geocoding": {
        "url": "https://geo2.datalore.jetbrains.com"
      },
      "map": {
        "State": [ "Alabama", "Alaska", "Arizona"],
        "Latitude": [ 32.806671, 61.370716, 33.729759],
        "Longitude": [ -86.79113000000001, -152.404419, -111.431221],
        "geometry": [
          "{\"type\": \"Point\", \"coordinates\": [-86.79113000000001, 32.806671]}",
          "{\"type\": \"Point\", \"coordinates\": [-152.404419, 61.370716]}",
          "{\"type\": \"Point\", \"coordinates\": [-111.431221, 33.729759]}"
        ]
      },
      "map_join": [["State"], ["State"]]
    }
  ]
}""".trimIndent()

        return parsePlotSpec(spec)
    }


    private fun antiMeridian(): MutableMap<String, Any> {
        val spec = """{
  "data": null,
  "mapping": {
    "x": null,
    "y": null
  },
  "data_meta": {},
  "theme": {
    "axis_title": null,
    "axis_title_x": null,
    "axis_title_y": null,
    "axis_text": null,
    "axis_text_x": null,
    "axis_text_y": null,
    "axis_ticks": null,
    "axis_ticks_x": null,
    "axis_ticks_y": null,
    "axis_line": null,
    "axis_line_x": null,
    "axis_line_y": null,
    "legend_position": "none",
    "legend_justification": null,
    "legend_direction": null,
    "axis_tooltip": null,
    "axis_tooltip_x": null,
    "axis_tooltip_y": null
  },
  "kind": "plot",
  "scales": [],
  "layers": [
    {
      "geom": "livemap",
      "stat": null,
      "data": null,
      "mapping": {
        "x": null,
        "y": null
      },
      "position": null,
      "show_legend": null,
      "tooltips": null,
      "data_meta": {},
      "sampling": null,
      "display_mode": null,
      "location": null,
      "zoom": null,
      "projection": null,
      "geodesic": null,
      "tiles": {
        "kind": "vector_lets_plot",
        "url": "wss://tiles.datalore.jetbrains.com",
        "theme": null
      },
      "geocoding": {}
    },
    {
      "geom": "rect",
      "stat": null,
      "data": {
        "request": [
          "Russia",
          "Russia",
          "USA",
          "USA"
        ],
        "lonmin": [
          19.6389412879944,
          -180.0,
          144.618412256241,
          -180.0
        ],
        "latmin": [
          41.1850968003273,
          41.1850968003273,
          -14.3735490739346,
          -14.3735490739346
        ],
        "lonmax": [
          180.0,
          -168.997978270054,
          180.0,
          -64.564847946167
        ],
        "latmax": [
          81.8587204813957,
          81.8587204813957,
          71.3878083229065,
          71.3878083229065
        ],
        "found name": [
          "\u0420\u043e\u0441\u0441\u0438\u044f",
          "\u0420\u043e\u0441\u0441\u0438\u044f",
          "United States of America",
          "United States of America"
        ]
      },
      "mapping": {
        "x": null,
        "y": null,
        "xmin": "lonmin",
        "xmax": "lonmax",
        "ymin": "latmin",
        "ymax": "latmax",
        "fill": "found name"
      },
      "position": null,
      "show_legend": null,
      "tooltips": null,
      "data_meta": {},
      "sampling": null,
      "map": null,
      "map_join": null,
      "alpha": 0.3
    }
  ]
}""".trimIndent()
        return parsePlotSpec(spec)
    }

    private fun tooltips(): MutableMap<String, Any> {
        val spec = """
            {
              "data": {
                "request": ["Texas", "Nevada", "Iowa"],
                "lon": [-99.6829525269137, -116.666956541192, -93.1514127397129],
                "lat": [31.1685702949762, 38.5030842572451, 41.9395130127668],
                "found name": ["Texas", "Nevada", "Iowa"]
              },
              "kind": "plot",
              "layers": [
                {
                  "geom": "livemap",
                  "tiles": {
                    "kind": "vector_lets_plot",
                    "url": "wss://tiles.datalore.jetbrains.com",
                    "theme": null
                  },
                  "geocoding": {}
                },
                {
                  "geom": "point",
                  "mapping": {
                    "x": "lon",
                    "y": "lat"
                  },
                  "tooltips": {
                    "tooltip_lines": [
                        "^x"
                     ],
                     "tooltip_formats": [
                        { "field": "^x", "format": "mean = {.4f}" }
                     ]
                  },
                  "symbol": "point",
                  "size": 50
                }
              ]
            }
        """.trimIndent()

        return parsePlotSpec(spec)
    }

    fun symbol_point(): MutableMap<String, Any> {
        val spec = """
                {
                  "data": {
                    "request": ["Texas", "Nevada", "Iowa"],
                    "lon": [-99.6829525269137, -116.666956541192, -93.1514127397129],
                    "lat": [31.1685702949762, 38.5030842572451, 41.9395130127668],
                    "found name": ["Texas", "Nevada", "Iowa"]
                  },
                  "kind": "plot",
                  "layers": [
                    {
                      "geom": "livemap",
                      "mapping": {
                        "x": "lon",
                        "y": "lat"
                      },
                      "symbol": "point",
                      "tiles": {
                        "kind": "vector_lets_plot",
                        "url": "wss://tiles.datalore.jetbrains.com",
                        "theme": null
                      },
                      "size": 50
                    }
                  ]
                }
            """.trimIndent()
        return parsePlotSpec(spec)
    }

    private fun geom_point(): MutableMap<String, Any> {
        val spec = """{
  "data": {
    "request": ["Texas", "Nevada", "Iowa"],
    "lon": [-99.6829525269137, -116.666956541192, -93.1514127397129],
    "lat": [31.1685702949762, 38.5030842572451, 41.9395130127668],
    "found name": ["Texas", "Nevada", "Iowa"]
  },
  "kind": "plot",
  "layers": [
    {
      "geom": "livemap",
      "tiles": {
        "kind": "vector_lets_plot",
        "url": "wss://tiles.datalore.jetbrains.com",
        "theme": null
      }
    },
    {
      "geom": "point",
      "mapping": {
        "x": "lon",
        "y": "lat"
      },
      "symbol": "point",
      "size": 50
    }
  ]
}"""
        return parsePlotSpec(spec)
    }

    fun basic(): MutableMap<String, Any> {
        val spec = """
                {
                    "kind": "plot", 
                    "layers": [
                        {
                            "geom": "livemap",
                            "tiles": {"kind": "raster_zxy", "url": "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png"}                            
                        }
                    ]
                }
            """.trimIndent()

        return parsePlotSpec(spec)
    }

    fun facetBars(): MutableMap<String, Any> {
        val spec = """{
                "ggtitle":{
                    "text":"Facet bars"
                },
                "data":{
                    "time":["Lunch", "Lunch", "Dinner", "Dinner", "Dinner"]
                },
                "facet":{
                    "name":"grid",
                    "x":"time",
                },
                "kind":"plot",
                "layers":[
                    {
                        "geom":"bar",
                        "mapping":{
                            "x":"time",
                            "fill":"time"
                        }
                    }
                ]
            }"""
        return parsePlotSpec(spec)
    }

    fun points(): MutableMap<String, Any> {
        val spec = """{
                "ggtitle": {"text": "Points on map"}, 
                "data": {"lon": [-100.420313, -91.016016], "lat": [34.835461, 38.843142], "clr": ["one", "two"]}, 
                "kind": "plot", 
                "layers": [
                    {
                        "geom": "livemap", 
                        "tiles": {"kind": "raster_zxy", "url": "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png"}
                    }, 
                    {
                        "geom": "point", 
                        "mapping": {"x": "lon", "y": "lat", "color": "clr"}, 
                        "size": 20
                    }
                ]
            }""".trimMargin()

        return parsePlotSpec(spec)
    }

    fun bunch(): MutableMap<String, Any> {
        val spec = """{
                "kind": "ggbunch", 
                "items": [
                    {
                        "x": 0, 
                        "y": 0, 
                        "feature_spec": {
                            "kind": "plot", 
                            "layers": [
                                {
                                    "geom": "livemap", 
                                    "tiles": {"kind": "raster_zxy", "url": "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png"}
                                }
                            ]
                        }
                    }, 
                    {
                        "x": 0, 
                        "y": 400, 
                        "feature_spec": {
                            "kind": "plot", 
                            "layers": [
                                {
                                    "geom": "livemap", 
                                    "tiles": {"kind": "raster_zxy", "url": "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png"}
                                }
                            ]
                        }
                    }
                ]
            }""".trimIndent()

        return parsePlotSpec(spec)

    }

    fun facet(): MutableMap<String, Any> {
        val spec = """{
                "data":{
                    "lon":[
                        -100.420313,
                        -91.016016
                    ],
                    "lat":[
                        34.835461,
                        38.843142
                    ]
                },
                "facet":{
                    "name":"grid",
                    "x":"lat"
                },
                "ggtitle":{
                    "text":"Two points"
                },
                "kind":"plot",
                "layers":[
                    {
                        "geom":"livemap",
                        "mapping":{
                            "x":"lon",
                            "y":"lat",
                            "color":"lon"
                        },
                        "tiles": {"kind": "raster_zxy", "url": "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png"}
                    }
                ]
            }"""
        return parsePlotSpec(spec)
    }

    fun pointsWithZoomAndLocation(): MutableMap<String, Any> {
        val spec = """{
                "ggtitle": {"text": "Points with zoom and location"}, 
                "data": {
                    "lon": [-100.420313, -91.016016], 
                    "lat": [34.835461, 38.843142], 
                    "clr": ["one", "two"]
                }, 
                "kind": "plot", 
                "layers": [
                    {
                        "geom": "livemap", 
                        "location": {
                            "type": "coordinates",
                            "data": [25.878516, 58.317548, 33.590918, 60.884144]
                        },
                        "zoom": 10 
                    }, 
                    {
                        "geom": "point", 
                        "mapping": {"x": "lon", "y": "lat", "color": "clr"}, 
                        "size": 20
                    }
                ]
            }""".trimMargin()

        return parsePlotSpec(spec)
    }

    fun setLocation(): MutableMap<String, Any> {
        val spec = """{
                "ggtitle": {"text": "Set location"}, 
                "kind": "plot",
                "layers": [
                    {
                        "geom": "livemap",
                        "location": {
                            "type": "coordinates",
                            "data": [25.878516, 58.317548, 33.590918, 60.884144]
                        },
                        "tiles": null
                    }
                ]
            }"""
        return parsePlotSpec(spec)
    }

    fun setZoom(): MutableMap<String, Any> {
        val spec = """{
                "ggtitle": {"text": "Set zoom and default location"}, 
                "kind": "plot",
                "layers": [
                    {
                        "geom": "livemap",
                        "zoom": 4,
                        "tiles": {"kind": "raster_zxy", "url": "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png"}
                    }
                ]
            }"""
        return parsePlotSpec(spec)
    }

    fun wrongRasterTileUrl(): MutableMap<String, Any> {
        val spec = """{
                "ggtitle": {"text": "Wrong tile url"}, 
                "kind": "plot",
                "layers": [
                    {
                        "geom": "livemap",
                        "tiles": {"raster": "http://c.tile.stamen.com/tonerd/{x}/{y}.png"}
                    }
                ]
            }"""
        return parsePlotSpec(spec)
    }

    fun fourPointsTwoLayers(): MutableMap<String, Any> {
        val spec = """{

                "kind":"plot",
                "layers":[
                    {
                        "geom":"livemap",
                        "data":{
                            "x":[29.777834, 29.778033],
                            "y":[59.991666, 59.988106],
                            "lonlat":["29.777834,59.991666", "29.778033,59.988106"],
                            "label":["one", "two"]
                        },                        
                        "mapping":{
                            "x":"x",
                            "y":"y",
                            "color":"label"
                        },
                        "location": {"type": "coordinates", "data": [29.7, 60.02]},
                        "zoom": 10,
                        "display_mode":"point",
                        "tiles":{ "kind":"raster_zxy", "url":"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png"},
                        "shape":19,
                        "size":21
                    },
                    {
                        "geom":"point",
                        "data":{
                            "lon":[29.703667, 29.72339, 29.75339, 29.77339, 29.79339, 29.81339],
                            "lat":[60.01668, 60.008983, 60.012983, 60.022983, 60.032983, 60.042983],
                            "label":["three", "four", "five", "six", "seve", "eight"]
                        },
                        "mapping":{
                            "x":"lon",
                            "y":"lat",
                            "color":"label"
                        },
                        "shape":19,
                        "size":21
                    }
                ]
            }
                """

        return parsePlotSpec(spec)
    }

    fun pointAndText(): MutableMap<String, Any> {
        val spec = """{
                "data":{
                    "x":[29.777834, 29.778033],
                    "y":[59.991666, 59.988106]
                },
                "kind":"plot",
                "layers":[
                    {
                        "geom":"livemap",
                        "tiles": {"kind": "raster_zxy", "url": "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png"}
                    },
                    {
                        "geom":"point",
                        "mapping":{
                            "x":"x",
                            "y":"y",
                            "color":"x"
                        },
                        "shape":19,
                        "size":21
                    },
                    {
                        "geom":"text",
                        "data":{
                            "lon":[29.72339],
                            "lat":[60.008983],
                            "label":["Kotlin"]
                        },
                        "mapping":{
                            "x":"lon",
                            "y":"lat",
                            "label":"label"
                        },
                        "size":18,
                        "color":"#900090",
                        "family":"serif",
                        "fontface":"italic bold",
                        "hjust":"middle",
                        "vjust":"center",
                        "angle":30
                    }
                ]
            }"""
        return parsePlotSpec(spec)
    }

}
